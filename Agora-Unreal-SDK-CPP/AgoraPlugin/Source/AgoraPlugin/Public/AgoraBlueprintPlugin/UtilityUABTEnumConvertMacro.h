// Copyright(c) 2024 Agora.io. All rights reserved.

#pragma once


#pragma region UABT_ENUM_CONVERT

#pragma region Original Example


//namespace agora {
//	namespace rtc {
//		namespace ue {
//			namespace UABTEnum {
//				inline agora::rtc::VIDEO_SOURCE_TYPE ToRawValue(EUABT_VIDEO_SOURCE_TYPE Val) {
//					agora::rtc::VIDEO_SOURCE_TYPE Result; 
//					
//					switch (Val) {
//					
//					case EUABT_VIDEO_SOURCE_TYPE::VIDEO_SOURCE_CAMERA_PRIMARY:
//						Result = agora::rtc::VIDEO_SOURCE_TYPE::VIDEO_SOURCE_CAMERA_PRIMARY;
//						break;
//					case EUABT_VIDEO_SOURCE_TYPE::VIDEO_SOURCE_CAMERA_SECONDARY:
//						Result = agora::rtc::VIDEO_SOURCE_TYPE::VIDEO_SOURCE_CAMERA_SECONDARY;  break;
//					default:
//						Result = agora::rtc::VIDEO_SOURCE_TYPE::VIDEO_SOURCE_CAMERA_PRIMARY; break;
//					} 
//					
//					return Result;
//				}
//			}
//		}
//	}
//}
//
//namespace agora {
//	namespace rtc {
//		namespace ue {
//			namespace UABTEnum {
//				inline EUABT_VIDEO_SOURCE_TYPE WrapWithUE(agora::rtc::VIDEO_SOURCE_TYPE Val) {
//					EUABT_VIDEO_SOURCE_TYPE Result; 
//					
//					switch (Val) {
//					
//					case agora::rtc::VIDEO_SOURCE_TYPE::VIDEO_SOURCE_CAMERA_PRIMARY: 
//						Result = EUABT_VIDEO_SOURCE_TYPE::VIDEO_SOURCE_CAMERA_PRIMARY; 
//						break; 
//					case agora::rtc::VIDEO_SOURCE_TYPE::VIDEO_SOURCE_CAMERA_SECONDARY: Result = EUABT_VIDEO_SOURCE_TYPE::VIDEO_SOURCE_CAMERA_SECONDARY; 
//						break; 
//						
//					default: 
//						Result = EUABT_VIDEO_SOURCE_TYPE::VIDEO_SOURCE_CAMERA_PRIMARY; 
//						break;
//					} 
//					
//					return Result;
//				}
//			}
//		}
//	}
//}

#pragma endregion Original Example


// Method: Convert [UEEnum] to [RawEnum]
#define FUNCNAME_ToRawValue ToRawValue
// Method: Convert [RawEnum] to [UEEnum]
#define FUNCNAME_ToUEEnum WrapWithUE

// Notice
// 1. The first item would be the default value

#pragma region Base


#define VAR_NAME_UABT_STATE Val
#define VAR_NAME_UABT_RESULT Result

// Only define the function template


// From [SRC_ENUM_TYPE] to [TAR_ENUM_TYPE]
#define GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_BEGIN(SRC_ENUM_TYPE,TAR_ENUM_TYPE,FUNCNAME) \
namespace agora{\
	namespace rtc{\
		namespace ue{\
			namespace UABTEnum{\
				inline TAR_ENUM_TYPE FUNCNAME(SRC_ENUM_TYPE VAR_NAME_UABT_STATE) {\
					TAR_ENUM_TYPE VAR_NAME_UABT_RESULT;


// Switch [SRC_ENUM_TYPE] VAR_STATE  to [TAR_ENUM_TYPE] VAR_TAR_RESULT
#define GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_SWITCH_BEGIN(VAR_STATE,VAR_TAR_RESULT,SRC_ENUM_TYPE,TAR_ENUM_TYPE,DEFAULT_ENUM_VAL) \
			switch (VAR_STATE) {\
			case SRC_ENUM_TYPE::DEFAULT_ENUM_VAL: VAR_TAR_RESULT = TAR_ENUM_TYPE::DEFAULT_ENUM_VAL; break;


#define GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_SWITCH_END(VAR_STATE,VAR_TAR_RESULT,SRC_ENUM_TYPE,TAR_ENUM_TYPE,DEFAULT_ENUM_VAL) \
			default:\
				VAR_TAR_RESULT = TAR_ENUM_TYPE::DEFAULT_ENUM_VAL; \
				break; \
			}

#define GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_END() \
					return VAR_NAME_UABT_RESULT; \
				} \
			} \
		} \
	} \
}

#pragma endregion Base


#pragma region UABTEnumConversion 1 Entry - Default Entry

// 1. from [UEBP_ENUM_TYPE] to [RAW_ENUM_TYPE]
#define GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_DEFAULT_ENTRY_SWICH_UE2RAW_BEGIN(UEBP_ENUM_TYPE,RAW_ENUM_TYPE,DEFAULT_ENUM_VAL)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_SWITCH_BEGIN(VAR_NAME_UABT_STATE, VAR_NAME_UABT_RESULT,UEBP_ENUM_TYPE, RAW_ENUM_TYPE,DEFAULT_ENUM_VAL)

#define GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_DEFAULT_ENTRY_SWICH_UE2RAW_END(UEBP_ENUM_TYPE,RAW_ENUM_TYPE,DEFAULT_ENUM_VAL)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_SWITCH_END(VAR_NAME_UABT_STATE, VAR_NAME_UABT_RESULT, UEBP_ENUM_TYPE, RAW_ENUM_TYPE, DEFAULT_ENUM_VAL)

// 2. from [RAW_ENUM_TYPE] to [UEBP_ENUM_TYPE]
#define GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_DEFAULT_ENTRY_SWICH_RAW2UE_BEGIN(RAW_ENUM_TYPE,UEBP_ENUM_TYPE,DEFAULT_ENUM_VAL)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_SWITCH_BEGIN(VAR_NAME_UABT_STATE, VAR_NAME_UABT_RESULT, RAW_ENUM_TYPE, UEBP_ENUM_TYPE, DEFAULT_ENUM_VAL)

#define GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_DEFAULT_ENTRY_SWICH_RAW2UE_END(RAW_ENUM_TYPE,UEBP_ENUM_TYPE,DEFAULT_ENUM_VAL)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_SWITCH_END(VAR_NAME_UABT_STATE, VAR_NAME_UABT_RESULT, RAW_ENUM_TYPE, UEBP_ENUM_TYPE, DEFAULT_ENUM_VAL)


#define GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_1_ENTRY(UEBP_ENUM_TYPE,RAW_ENUM_TYPE,DEFAULT_ENUM_VAL)\
GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_BEGIN(UEBP_ENUM_TYPE, RAW_ENUM_TYPE, FUNCNAME_ToRawValue)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_DEFAULT_ENTRY_SWICH_UE2RAW_BEGIN(UEBP_ENUM_TYPE, RAW_ENUM_TYPE,DEFAULT_ENUM_VAL)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_DEFAULT_ENTRY_SWICH_UE2RAW_END(UEBP_ENUM_TYPE, RAW_ENUM_TYPE, DEFAULT_ENUM_VAL)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_END()\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_BEGIN(RAW_ENUM_TYPE,UEBP_ENUM_TYPE, FUNCNAME_ToUEEnum)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_DEFAULT_ENTRY_SWICH_RAW2UE_BEGIN(RAW_ENUM_TYPE, UEBP_ENUM_TYPE, DEFAULT_ENUM_VAL)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_DEFAULT_ENTRY_SWICH_RAW2UE_END(RAW_ENUM_TYPE, UEBP_ENUM_TYPE, DEFAULT_ENUM_VAL)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_END()

#pragma endregion UABTEnumConversion 1 Entry - Default Entry



#pragma region UABTEnumConversion 2 Entries

// 1. from [UEBP_ENUM_TYPE] to [RAW_ENUM_TYPE]
#define GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_2_ENTRIES_SWICH_UE2RAW_BEGIN(UEBP_ENUM_TYPE,RAW_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_DEFAULT_ENTRY_SWICH_UE2RAW_BEGIN(UEBP_ENUM_TYPE, RAW_ENUM_TYPE,DEFAULT_ENUM_VAL)\
        case UEBP_ENUM_TYPE::ENUM_VAL02: Result = RAW_ENUM_TYPE::ENUM_VAL02; break;

// 2. from [RAW_ENUM_TYPE] to [UEBP_ENUM_TYPE]
#define GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_2_ENTRIES_SWICH_RAW2UE_BEGIN(RAW_ENUM_TYPE,UEBP_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_DEFAULT_ENTRY_SWICH_RAW2UE_BEGIN(RAW_ENUM_TYPE, UEBP_ENUM_TYPE, DEFAULT_ENUM_VAL)\
	    case RAW_ENUM_TYPE::ENUM_VAL02: Result = UEBP_ENUM_TYPE::ENUM_VAL02; break;


#define GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_2_ENTRIES(UEBP_ENUM_TYPE,RAW_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02)\
GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_BEGIN(UEBP_ENUM_TYPE, RAW_ENUM_TYPE, FUNCNAME_ToRawValue)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_2_ENTRIES_SWICH_UE2RAW_BEGIN(UEBP_ENUM_TYPE, RAW_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_DEFAULT_ENTRY_SWICH_UE2RAW_END(UEBP_ENUM_TYPE, RAW_ENUM_TYPE, DEFAULT_ENUM_VAL)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_END()\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_BEGIN(RAW_ENUM_TYPE,UEBP_ENUM_TYPE, FUNCNAME_ToUEEnum)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_2_ENTRIES_SWICH_RAW2UE_BEGIN(RAW_ENUM_TYPE, UEBP_ENUM_TYPE, DEFAULT_ENUM_VAL,ENUM_VAL02)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_DEFAULT_ENTRY_SWICH_RAW2UE_END(RAW_ENUM_TYPE, UEBP_ENUM_TYPE, DEFAULT_ENUM_VAL)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_END()

#pragma endregion UABTEnumConversion 2 Entries

#pragma region UABTEnumConversion 3 Entries

// 1. from [UEBP_ENUM_TYPE] to [RAW_ENUM_TYPE]
#define GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_3_ENTRIES_SWICH_UE2RAW_BEGIN(UEBP_ENUM_TYPE,RAW_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_2_ENTRIES_SWICH_UE2RAW_BEGIN(UEBP_ENUM_TYPE, RAW_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02)\
		case UEBP_ENUM_TYPE::ENUM_VAL03: Result = RAW_ENUM_TYPE::ENUM_VAL03; break;

// 2. from [RAW_ENUM_TYPE] to [UEBP_ENUM_TYPE]
#define GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_3_ENTRIES_SWICH_RAW2UE_BEGIN(RAW_ENUM_TYPE,UEBP_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_2_ENTRIES_SWICH_RAW2UE_BEGIN(RAW_ENUM_TYPE, UEBP_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02)\
		case RAW_ENUM_TYPE::ENUM_VAL03: Result = UEBP_ENUM_TYPE::ENUM_VAL03; break;

#define GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_3_ENTRIES(UEBP_ENUM_TYPE,RAW_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03)\
GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_BEGIN(UEBP_ENUM_TYPE, RAW_ENUM_TYPE, FUNCNAME_ToRawValue)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_3_ENTRIES_SWICH_UE2RAW_BEGIN(UEBP_ENUM_TYPE, RAW_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_DEFAULT_ENTRY_SWICH_UE2RAW_END(UEBP_ENUM_TYPE, RAW_ENUM_TYPE, DEFAULT_ENUM_VAL)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_END()\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_BEGIN(RAW_ENUM_TYPE,UEBP_ENUM_TYPE, FUNCNAME_ToUEEnum)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_3_ENTRIES_SWICH_RAW2UE_BEGIN(RAW_ENUM_TYPE, UEBP_ENUM_TYPE, DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_DEFAULT_ENTRY_SWICH_RAW2UE_END(RAW_ENUM_TYPE, UEBP_ENUM_TYPE, DEFAULT_ENUM_VAL)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_END()

#pragma endregion UABTEnumConversion 3 Entries


#pragma region UABTEnumConversion 4 Entries

// 1. from [UEBP_ENUM_TYPE] to [RAW_ENUM_TYPE]
#define GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_4_ENTRIES_SWICH_UE2RAW_BEGIN(UEBP_ENUM_TYPE,RAW_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_3_ENTRIES_SWICH_UE2RAW_BEGIN(UEBP_ENUM_TYPE, RAW_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03)\
		case UEBP_ENUM_TYPE::ENUM_VAL04: Result = RAW_ENUM_TYPE::ENUM_VAL04; break;

// 2. from [RAW_ENUM_TYPE] to [UEBP_ENUM_TYPE]
#define GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_4_ENTRIES_SWICH_RAW2UE_BEGIN(RAW_ENUM_TYPE,UEBP_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_3_ENTRIES_SWICH_RAW2UE_BEGIN(RAW_ENUM_TYPE, UEBP_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03)\
		case RAW_ENUM_TYPE::ENUM_VAL04: Result = UEBP_ENUM_TYPE::ENUM_VAL04; break;

#define GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_4_ENTRIES(UEBP_ENUM_TYPE,RAW_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04)\
GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_BEGIN(UEBP_ENUM_TYPE, RAW_ENUM_TYPE, FUNCNAME_ToRawValue)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_4_ENTRIES_SWICH_UE2RAW_BEGIN(UEBP_ENUM_TYPE, RAW_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_DEFAULT_ENTRY_SWICH_UE2RAW_END(UEBP_ENUM_TYPE, RAW_ENUM_TYPE, DEFAULT_ENUM_VAL)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_END()\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_BEGIN(RAW_ENUM_TYPE,UEBP_ENUM_TYPE, FUNCNAME_ToUEEnum)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_4_ENTRIES_SWICH_RAW2UE_BEGIN(RAW_ENUM_TYPE, UEBP_ENUM_TYPE, DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_DEFAULT_ENTRY_SWICH_RAW2UE_END(RAW_ENUM_TYPE, UEBP_ENUM_TYPE, DEFAULT_ENUM_VAL)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_END()

#pragma endregion UABTEnumConversion 4 Entries


#pragma region UABTEnumConversion 5 Entries

// 1. from [UEBP_ENUM_TYPE] to [RAW_ENUM_TYPE]
#define GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_5_ENTRIES_SWICH_UE2RAW_BEGIN(UEBP_ENUM_TYPE,RAW_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_4_ENTRIES_SWICH_UE2RAW_BEGIN(UEBP_ENUM_TYPE, RAW_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04)\
		case UEBP_ENUM_TYPE::ENUM_VAL05: Result = RAW_ENUM_TYPE::ENUM_VAL05; break;

// 2. from [RAW_ENUM_TYPE] to [UEBP_ENUM_TYPE]
#define GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_5_ENTRIES_SWICH_RAW2UE_BEGIN(RAW_ENUM_TYPE,UEBP_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_4_ENTRIES_SWICH_RAW2UE_BEGIN(RAW_ENUM_TYPE, UEBP_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04)\
		case RAW_ENUM_TYPE::ENUM_VAL05: Result = UEBP_ENUM_TYPE::ENUM_VAL05; break;

#define GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_5_ENTRIES(UEBP_ENUM_TYPE,RAW_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05)\
GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_BEGIN(UEBP_ENUM_TYPE, RAW_ENUM_TYPE, FUNCNAME_ToRawValue)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_5_ENTRIES_SWICH_UE2RAW_BEGIN(UEBP_ENUM_TYPE, RAW_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_DEFAULT_ENTRY_SWICH_UE2RAW_END(UEBP_ENUM_TYPE, RAW_ENUM_TYPE, DEFAULT_ENUM_VAL)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_END()\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_BEGIN(RAW_ENUM_TYPE,UEBP_ENUM_TYPE, FUNCNAME_ToUEEnum)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_5_ENTRIES_SWICH_RAW2UE_BEGIN(RAW_ENUM_TYPE, UEBP_ENUM_TYPE, DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_DEFAULT_ENTRY_SWICH_RAW2UE_END(RAW_ENUM_TYPE, UEBP_ENUM_TYPE, DEFAULT_ENUM_VAL)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_END()

#pragma endregion UABTEnumConversion 5 Entries


#pragma region UABTEnumConversion 6 Entries

// 1. from [UEBP_ENUM_TYPE] to [RAW_ENUM_TYPE]
#define GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_6_ENTRIES_SWICH_UE2RAW_BEGIN(UEBP_ENUM_TYPE,RAW_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_5_ENTRIES_SWICH_UE2RAW_BEGIN(UEBP_ENUM_TYPE, RAW_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05)\
		case UEBP_ENUM_TYPE::ENUM_VAL06: Result = RAW_ENUM_TYPE::ENUM_VAL06; break;

#define GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_6_ENTRIES_SWICH_RAW2UE_BEGIN(RAW_ENUM_TYPE,UEBP_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_5_ENTRIES_SWICH_RAW2UE_BEGIN(RAW_ENUM_TYPE, UEBP_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05)\
		case RAW_ENUM_TYPE::ENUM_VAL06: Result = UEBP_ENUM_TYPE::ENUM_VAL06; break;

#define GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_6_ENTRIES(UEBP_ENUM_TYPE,RAW_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06)\
GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_BEGIN(UEBP_ENUM_TYPE, RAW_ENUM_TYPE, FUNCNAME_ToRawValue)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_6_ENTRIES_SWICH_UE2RAW_BEGIN(UEBP_ENUM_TYPE, RAW_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_DEFAULT_ENTRY_SWICH_UE2RAW_END(UEBP_ENUM_TYPE, RAW_ENUM_TYPE, DEFAULT_ENUM_VAL)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_END()\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_BEGIN(RAW_ENUM_TYPE,UEBP_ENUM_TYPE, FUNCNAME_ToUEEnum)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_6_ENTRIES_SWICH_RAW2UE_BEGIN(RAW_ENUM_TYPE, UEBP_ENUM_TYPE, DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_DEFAULT_ENTRY_SWICH_RAW2UE_END(RAW_ENUM_TYPE, UEBP_ENUM_TYPE, DEFAULT_ENUM_VAL)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_END()

#pragma endregion UABTEnumConversion 6 Entries


#pragma region UABTEnumConversion 7 Entries

// 1. from [UEBP_ENUM_TYPE] to [RAW_ENUM_TYPE]
#define GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_7_ENTRIES_SWICH_UE2RAW_BEGIN(UEBP_ENUM_TYPE,RAW_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_6_ENTRIES_SWICH_UE2RAW_BEGIN(UEBP_ENUM_TYPE, RAW_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06)\
		case UEBP_ENUM_TYPE::ENUM_VAL07: Result = RAW_ENUM_TYPE::ENUM_VAL07; break;

// 2. from [RAW_ENUM_TYPE] to [UEBP_ENUM_TYPE]
#define GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_7_ENTRIES_SWICH_RAW2UE_BEGIN(RAW_ENUM_TYPE,UEBP_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_6_ENTRIES_SWICH_RAW2UE_BEGIN(RAW_ENUM_TYPE, UEBP_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06)\
		case RAW_ENUM_TYPE::ENUM_VAL07: Result = UEBP_ENUM_TYPE::ENUM_VAL07; break;

#define GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_7_ENTRIES(UEBP_ENUM_TYPE,RAW_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07)\
GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_BEGIN(UEBP_ENUM_TYPE, RAW_ENUM_TYPE, FUNCNAME_ToRawValue)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_7_ENTRIES_SWICH_UE2RAW_BEGIN(UEBP_ENUM_TYPE, RAW_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_DEFAULT_ENTRY_SWICH_UE2RAW_END(UEBP_ENUM_TYPE, RAW_ENUM_TYPE, DEFAULT_ENUM_VAL)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_END()\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_BEGIN(RAW_ENUM_TYPE,UEBP_ENUM_TYPE, FUNCNAME_ToUEEnum)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_7_ENTRIES_SWICH_RAW2UE_BEGIN(RAW_ENUM_TYPE, UEBP_ENUM_TYPE, DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_DEFAULT_ENTRY_SWICH_RAW2UE_END(RAW_ENUM_TYPE, UEBP_ENUM_TYPE, DEFAULT_ENUM_VAL)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_END()


#pragma endregion UABTEnumConversion 7 Entries


#pragma region UABTEnumConversion 8 Entries

// 1. from [UEBP_ENUM_TYPE] to [RAW_ENUM_TYPE]
#define GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_8_ENTRIES_SWICH_UE2RAW_BEGIN(UEBP_ENUM_TYPE,RAW_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_7_ENTRIES_SWICH_UE2RAW_BEGIN(UEBP_ENUM_TYPE, RAW_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07)\
		case UEBP_ENUM_TYPE::ENUM_VAL08: Result = RAW_ENUM_TYPE::ENUM_VAL08; break;

// 2. from [RAW_ENUM_TYPE] to [UEBP_ENUM_TYPE]
#define GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_8_ENTRIES_SWICH_RAW2UE_BEGIN(RAW_ENUM_TYPE,UEBP_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_7_ENTRIES_SWICH_RAW2UE_BEGIN(RAW_ENUM_TYPE, UEBP_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07)\
		case RAW_ENUM_TYPE::ENUM_VAL08: Result = UEBP_ENUM_TYPE::ENUM_VAL08; break;

#define GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_8_ENTRIES(UEBP_ENUM_TYPE,RAW_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08)\
GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_BEGIN(UEBP_ENUM_TYPE, RAW_ENUM_TYPE, FUNCNAME_ToRawValue)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_8_ENTRIES_SWICH_UE2RAW_BEGIN(UEBP_ENUM_TYPE, RAW_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_DEFAULT_ENTRY_SWICH_UE2RAW_END(UEBP_ENUM_TYPE, RAW_ENUM_TYPE, DEFAULT_ENUM_VAL)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_END()\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_BEGIN(RAW_ENUM_TYPE,UEBP_ENUM_TYPE, FUNCNAME_ToUEEnum)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_8_ENTRIES_SWICH_RAW2UE_BEGIN(RAW_ENUM_TYPE, UEBP_ENUM_TYPE, DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_DEFAULT_ENTRY_SWICH_RAW2UE_END(RAW_ENUM_TYPE, UEBP_ENUM_TYPE, DEFAULT_ENUM_VAL)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_END()

#pragma endregion UABTEnumConversion 8 Entries


#pragma region UABTEnumConversion 9 Entries

// 1. from [UEBP_ENUM_TYPE] to [RAW_ENUM_TYPE]
#define GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_9_ENTRIES_SWICH_UE2RAW_BEGIN(UEBP_ENUM_TYPE,RAW_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_8_ENTRIES_SWICH_UE2RAW_BEGIN(UEBP_ENUM_TYPE, RAW_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08)\
		case UEBP_ENUM_TYPE::ENUM_VAL09: Result = RAW_ENUM_TYPE::ENUM_VAL09; break;

// 2. from [RAW_ENUM_TYPE] to [UEBP_ENUM_TYPE]
#define GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_9_ENTRIES_SWICH_RAW2UE_BEGIN(RAW_ENUM_TYPE,UEBP_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_8_ENTRIES_SWICH_RAW2UE_BEGIN(RAW_ENUM_TYPE, UEBP_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08)\
		case RAW_ENUM_TYPE::ENUM_VAL09: Result = UEBP_ENUM_TYPE::ENUM_VAL09; break;


#define GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_9_ENTRIES(UEBP_ENUM_TYPE,RAW_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09)\
GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_BEGIN(UEBP_ENUM_TYPE, RAW_ENUM_TYPE, FUNCNAME_ToRawValue)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_9_ENTRIES_SWICH_UE2RAW_BEGIN(UEBP_ENUM_TYPE, RAW_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_DEFAULT_ENTRY_SWICH_UE2RAW_END(UEBP_ENUM_TYPE, RAW_ENUM_TYPE, DEFAULT_ENUM_VAL)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_END()\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_BEGIN(RAW_ENUM_TYPE,UEBP_ENUM_TYPE, FUNCNAME_ToUEEnum)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_9_ENTRIES_SWICH_RAW2UE_BEGIN(RAW_ENUM_TYPE, UEBP_ENUM_TYPE, DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_DEFAULT_ENTRY_SWICH_RAW2UE_END(RAW_ENUM_TYPE, UEBP_ENUM_TYPE, DEFAULT_ENUM_VAL)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_END()

#pragma endregion UABTEnumConversion 9 Entries


#pragma region UABTEnumConversion 10 Entries

// 1. from [UEBP_ENUM_TYPE] to [RAW_ENUM_TYPE]
#define GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_10_ENTRIES_SWICH_UE2RAW_BEGIN(UEBP_ENUM_TYPE,RAW_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_9_ENTRIES_SWICH_UE2RAW_BEGIN(UEBP_ENUM_TYPE, RAW_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09)\
		case UEBP_ENUM_TYPE::ENUM_VAL10: Result = RAW_ENUM_TYPE::ENUM_VAL10; break;


// 2. from [RAW_ENUM_TYPE] to [UEBP_ENUM_TYPE]
#define GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_10_ENTRIES_SWICH_RAW2UE_BEGIN(RAW_ENUM_TYPE,UEBP_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_9_ENTRIES_SWICH_RAW2UE_BEGIN(RAW_ENUM_TYPE, UEBP_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09)\
		case RAW_ENUM_TYPE::ENUM_VAL10: Result = UEBP_ENUM_TYPE::ENUM_VAL10; break;


#define GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_10_ENTRIES(UEBP_ENUM_TYPE,RAW_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10)\
GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_BEGIN(UEBP_ENUM_TYPE, RAW_ENUM_TYPE, FUNCNAME_ToRawValue)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_10_ENTRIES_SWICH_UE2RAW_BEGIN(UEBP_ENUM_TYPE, RAW_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_DEFAULT_ENTRY_SWICH_UE2RAW_END(UEBP_ENUM_TYPE, RAW_ENUM_TYPE, DEFAULT_ENUM_VAL)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_END()\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_BEGIN(RAW_ENUM_TYPE,UEBP_ENUM_TYPE, FUNCNAME_ToUEEnum)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_10_ENTRIES_SWICH_RAW2UE_BEGIN(RAW_ENUM_TYPE, UEBP_ENUM_TYPE, DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_DEFAULT_ENTRY_SWICH_RAW2UE_END(RAW_ENUM_TYPE, UEBP_ENUM_TYPE, DEFAULT_ENUM_VAL)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_END()


#pragma endregion UABTEnumConversion 10 Entries


#pragma region UABTEnumConversion 11 Entries

// 1. from [UEBP_ENUM_TYPE] to [RAW_ENUM_TYPE]
#define GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_11_ENTRIES_SWICH_UE2RAW_BEGIN(UEBP_ENUM_TYPE,RAW_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_10_ENTRIES_SWICH_UE2RAW_BEGIN(UEBP_ENUM_TYPE, RAW_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10)\
		case UEBP_ENUM_TYPE::ENUM_VAL11: Result = RAW_ENUM_TYPE::ENUM_VAL11; break;

// 2. from [RAW_ENUM_TYPE] to [UEBP_ENUM_TYPE]
#define GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_11_ENTRIES_SWICH_RAW2UE_BEGIN(RAW_ENUM_TYPE,UEBP_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_10_ENTRIES_SWICH_RAW2UE_BEGIN(RAW_ENUM_TYPE, UEBP_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10)\
		case RAW_ENUM_TYPE::ENUM_VAL11: Result = UEBP_ENUM_TYPE::ENUM_VAL11; break;


#define GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_11_ENTRIES(UEBP_ENUM_TYPE,RAW_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11)\
GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_BEGIN(UEBP_ENUM_TYPE, RAW_ENUM_TYPE, FUNCNAME_ToRawValue)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_11_ENTRIES_SWICH_UE2RAW_BEGIN(UEBP_ENUM_TYPE, RAW_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_DEFAULT_ENTRY_SWICH_UE2RAW_END(UEBP_ENUM_TYPE, RAW_ENUM_TYPE, DEFAULT_ENUM_VAL)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_END()\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_BEGIN(RAW_ENUM_TYPE,UEBP_ENUM_TYPE, FUNCNAME_ToUEEnum)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_11_ENTRIES_SWICH_RAW2UE_BEGIN(RAW_ENUM_TYPE, UEBP_ENUM_TYPE, DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_DEFAULT_ENTRY_SWICH_RAW2UE_END(RAW_ENUM_TYPE, UEBP_ENUM_TYPE, DEFAULT_ENUM_VAL)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_END()


#pragma endregion UABTEnumConversion 11 Entries


#pragma region UABTEnumConversion 12 Entries

// 1. from [UEBP_ENUM_TYPE] to [RAW_ENUM_TYPE]
#define GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_12_ENTRIES_SWICH_UE2RAW_BEGIN(UEBP_ENUM_TYPE,RAW_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_11_ENTRIES_SWICH_UE2RAW_BEGIN(UEBP_ENUM_TYPE, RAW_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11)\
		case UEBP_ENUM_TYPE::ENUM_VAL12: Result = RAW_ENUM_TYPE::ENUM_VAL12; break;

// 2. from [RAW_ENUM_TYPE] to [UEBP_ENUM_TYPE]
#define GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_12_ENTRIES_SWICH_RAW2UE_BEGIN(RAW_ENUM_TYPE,UEBP_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_11_ENTRIES_SWICH_RAW2UE_BEGIN(RAW_ENUM_TYPE, UEBP_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11)\
		case RAW_ENUM_TYPE::ENUM_VAL12: Result = UEBP_ENUM_TYPE::ENUM_VAL12; break;

#define GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_12_ENTRIES(UEBP_ENUM_TYPE,RAW_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12)\
GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_BEGIN(UEBP_ENUM_TYPE, RAW_ENUM_TYPE, FUNCNAME_ToRawValue)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_12_ENTRIES_SWICH_UE2RAW_BEGIN(UEBP_ENUM_TYPE, RAW_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_DEFAULT_ENTRY_SWICH_UE2RAW_END(UEBP_ENUM_TYPE, RAW_ENUM_TYPE, DEFAULT_ENUM_VAL)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_END()\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_BEGIN(RAW_ENUM_TYPE,UEBP_ENUM_TYPE, FUNCNAME_ToUEEnum)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_12_ENTRIES_SWICH_RAW2UE_BEGIN(RAW_ENUM_TYPE, UEBP_ENUM_TYPE, DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_DEFAULT_ENTRY_SWICH_RAW2UE_END(RAW_ENUM_TYPE, UEBP_ENUM_TYPE, DEFAULT_ENUM_VAL)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_END()

#pragma endregion UABTEnumConversion 12 Entries

#pragma region UABTEnumConversion 13 Entries

// 1. from [UEBP_ENUM_TYPE] to [RAW_ENUM_TYPE]
#define GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_13_ENTRIES_SWICH_UE2RAW_BEGIN(UEBP_ENUM_TYPE,RAW_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_12_ENTRIES_SWICH_UE2RAW_BEGIN(UEBP_ENUM_TYPE, RAW_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12)\
		case UEBP_ENUM_TYPE::ENUM_VAL13: Result = RAW_ENUM_TYPE::ENUM_VAL13; break;

// 2. from [RAW_ENUM_TYPE] to [UEBP_ENUM_TYPE]
#define GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_13_ENTRIES_SWICH_RAW2UE_BEGIN(RAW_ENUM_TYPE,UEBP_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_12_ENTRIES_SWICH_RAW2UE_BEGIN(RAW_ENUM_TYPE, UEBP_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12)\
		case RAW_ENUM_TYPE::ENUM_VAL13: Result = UEBP_ENUM_TYPE::ENUM_VAL13; break;

#define GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_13_ENTRIES(UEBP_ENUM_TYPE,RAW_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13)\
GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_BEGIN(UEBP_ENUM_TYPE, RAW_ENUM_TYPE, FUNCNAME_ToRawValue)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_13_ENTRIES_SWICH_UE2RAW_BEGIN(UEBP_ENUM_TYPE, RAW_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_DEFAULT_ENTRY_SWICH_UE2RAW_END(UEBP_ENUM_TYPE, RAW_ENUM_TYPE, DEFAULT_ENUM_VAL)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_END()\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_BEGIN(RAW_ENUM_TYPE,UEBP_ENUM_TYPE, FUNCNAME_ToUEEnum)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_13_ENTRIES_SWICH_RAW2UE_BEGIN(RAW_ENUM_TYPE, UEBP_ENUM_TYPE, DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_DEFAULT_ENTRY_SWICH_RAW2UE_END(RAW_ENUM_TYPE, UEBP_ENUM_TYPE, DEFAULT_ENUM_VAL)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_END()

#pragma endregion UABTEnumConversion 13 Entries

#pragma region UABTEnumConversion 14 Entries

// 1. from [UEBP_ENUM_TYPE] to [RAW_ENUM_TYPE]
#define GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_14_ENTRIES_SWICH_UE2RAW_BEGIN(UEBP_ENUM_TYPE,RAW_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13,ENUM_VAL14)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_13_ENTRIES_SWICH_UE2RAW_BEGIN(UEBP_ENUM_TYPE, RAW_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13)\
		case UEBP_ENUM_TYPE::ENUM_VAL14: Result = RAW_ENUM_TYPE::ENUM_VAL14; break;

// 2. from [RAW_ENUM_TYPE] to [UEBP_ENUM_TYPE]
#define GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_14_ENTRIES_SWICH_RAW2UE_BEGIN(RAW_ENUM_TYPE,UEBP_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13,ENUM_VAL14)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_13_ENTRIES_SWICH_RAW2UE_BEGIN(RAW_ENUM_TYPE, UEBP_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13)\
		case RAW_ENUM_TYPE::ENUM_VAL14: Result = UEBP_ENUM_TYPE::ENUM_VAL14; break;

#define GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_14_ENTRIES(UEBP_ENUM_TYPE,RAW_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13,ENUM_VAL14)\
GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_BEGIN(UEBP_ENUM_TYPE, RAW_ENUM_TYPE, FUNCNAME_ToRawValue)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_14_ENTRIES_SWICH_UE2RAW_BEGIN(UEBP_ENUM_TYPE, RAW_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13,ENUM_VAL14)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_DEFAULT_ENTRY_SWICH_UE2RAW_END(UEBP_ENUM_TYPE, RAW_ENUM_TYPE, DEFAULT_ENUM_VAL)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_END()\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_BEGIN(RAW_ENUM_TYPE,UEBP_ENUM_TYPE, FUNCNAME_ToUEEnum)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_14_ENTRIES_SWICH_RAW2UE_BEGIN(RAW_ENUM_TYPE, UEBP_ENUM_TYPE, DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13,ENUM_VAL14)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_DEFAULT_ENTRY_SWICH_RAW2UE_END(RAW_ENUM_TYPE, UEBP_ENUM_TYPE, DEFAULT_ENUM_VAL)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_END()


#pragma endregion UABTEnumConversion 14 Entries


#pragma region UABTEnumConversion 15 Entries

// 1. from [UEBP_ENUM_TYPE] to [RAW_ENUM_TYPE]
#define GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_15_ENTRIES_SWICH_UE2RAW_BEGIN(UEBP_ENUM_TYPE,RAW_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13,ENUM_VAL14,ENUM_VAL15)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_14_ENTRIES_SWICH_UE2RAW_BEGIN(UEBP_ENUM_TYPE, RAW_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13,ENUM_VAL14)\
		case UEBP_ENUM_TYPE::ENUM_VAL15: Result = RAW_ENUM_TYPE::ENUM_VAL15; break;


// 2. from [RAW_ENUM_TYPE] to [UEBP_ENUM_TYPE]
#define GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_15_ENTRIES_SWICH_RAW2UE_BEGIN(RAW_ENUM_TYPE,UEBP_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13,ENUM_VAL14,ENUM_VAL15)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_14_ENTRIES_SWICH_RAW2UE_BEGIN(RAW_ENUM_TYPE, UEBP_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13,ENUM_VAL14)\
		case RAW_ENUM_TYPE::ENUM_VAL15: Result = UEBP_ENUM_TYPE::ENUM_VAL15; break;

#define GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_15_ENTRIES(UEBP_ENUM_TYPE,RAW_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13,ENUM_VAL14,ENUM_VAL15)\
GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_BEGIN(UEBP_ENUM_TYPE, RAW_ENUM_TYPE, FUNCNAME_ToRawValue)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_15_ENTRIES_SWICH_UE2RAW_BEGIN(UEBP_ENUM_TYPE, RAW_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13,ENUM_VAL14,ENUM_VAL15)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_DEFAULT_ENTRY_SWICH_UE2RAW_END(UEBP_ENUM_TYPE, RAW_ENUM_TYPE, DEFAULT_ENUM_VAL)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_END()\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_BEGIN(RAW_ENUM_TYPE,UEBP_ENUM_TYPE, FUNCNAME_ToUEEnum)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_15_ENTRIES_SWICH_RAW2UE_BEGIN(RAW_ENUM_TYPE, UEBP_ENUM_TYPE, DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13,ENUM_VAL14,ENUM_VAL15)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_DEFAULT_ENTRY_SWICH_RAW2UE_END(RAW_ENUM_TYPE, UEBP_ENUM_TYPE, DEFAULT_ENUM_VAL)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_END()

#pragma endregion UABTEnumConversion 15 Entries


#pragma region UABTEnumConversion 16 Entries

// 1. from [UEBP_ENUM_TYPE] to [RAW_ENUM_TYPE]
#define GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_16_ENTRIES_SWICH_UE2RAW_BEGIN(UEBP_ENUM_TYPE,RAW_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13,ENUM_VAL14,ENUM_VAL15,ENUM_VAL16)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_15_ENTRIES_SWICH_UE2RAW_BEGIN(UEBP_ENUM_TYPE, RAW_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13,ENUM_VAL14,ENUM_VAL15)\
		case UEBP_ENUM_TYPE::ENUM_VAL16: Result = RAW_ENUM_TYPE::ENUM_VAL16; break;

// 2. from [RAW_ENUM_TYPE] to [UEBP_ENUM_TYPE]
#define GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_16_ENTRIES_SWICH_RAW2UE_BEGIN(RAW_ENUM_TYPE,UEBP_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13,ENUM_VAL14,ENUM_VAL15,ENUM_VAL16)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_15_ENTRIES_SWICH_RAW2UE_BEGIN(RAW_ENUM_TYPE, UEBP_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13,ENUM_VAL14,ENUM_VAL15)\
		case RAW_ENUM_TYPE::ENUM_VAL16: Result = UEBP_ENUM_TYPE::ENUM_VAL16; break;


#define GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_16_ENTRIES(UEBP_ENUM_TYPE,RAW_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13,ENUM_VAL14,ENUM_VAL15,ENUM_VAL16)\
GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_BEGIN(UEBP_ENUM_TYPE, RAW_ENUM_TYPE, FUNCNAME_ToRawValue)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_16_ENTRIES_SWICH_UE2RAW_BEGIN(UEBP_ENUM_TYPE, RAW_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13,ENUM_VAL14,ENUM_VAL15,ENUM_VAL16)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_DEFAULT_ENTRY_SWICH_UE2RAW_END(UEBP_ENUM_TYPE, RAW_ENUM_TYPE, DEFAULT_ENUM_VAL)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_END()\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_BEGIN(RAW_ENUM_TYPE,UEBP_ENUM_TYPE, FUNCNAME_ToUEEnum)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_16_ENTRIES_SWICH_RAW2UE_BEGIN(RAW_ENUM_TYPE, UEBP_ENUM_TYPE, DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13,ENUM_VAL14,ENUM_VAL15,ENUM_VAL16)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_DEFAULT_ENTRY_SWICH_RAW2UE_END(RAW_ENUM_TYPE, UEBP_ENUM_TYPE, DEFAULT_ENUM_VAL)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_END()


#pragma endregion UABTEnumConversion 16 Entries


#pragma region UABTEnumConversion 17 Entries

// 1. from [UEBP_ENUM_TYPE] to [RAW_ENUM_TYPE]
#define GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_17_ENTRIES_SWICH_UE2RAW_BEGIN(UEBP_ENUM_TYPE,RAW_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13,ENUM_VAL14,ENUM_VAL15,ENUM_VAL16,ENUM_VAL17)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_16_ENTRIES_SWICH_UE2RAW_BEGIN(UEBP_ENUM_TYPE, RAW_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13,ENUM_VAL14,ENUM_VAL15,ENUM_VAL16)\
		case UEBP_ENUM_TYPE::ENUM_VAL17: Result = RAW_ENUM_TYPE::ENUM_VAL17; break;

// 2. from [RAW_ENUM_TYPE] to [UEBP_ENUM_TYPE]
#define GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_17_ENTRIES_SWICH_RAW2UE_BEGIN(RAW_ENUM_TYPE,UEBP_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13,ENUM_VAL14,ENUM_VAL15,ENUM_VAL16,ENUM_VAL17)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_16_ENTRIES_SWICH_RAW2UE_BEGIN(RAW_ENUM_TYPE, UEBP_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13,ENUM_VAL14,ENUM_VAL15,ENUM_VAL16)\
		case RAW_ENUM_TYPE::ENUM_VAL17: Result = UEBP_ENUM_TYPE::ENUM_VAL17; break;

#define GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_17_ENTRIES(UEBP_ENUM_TYPE,RAW_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13,ENUM_VAL14,ENUM_VAL15,ENUM_VAL16,ENUM_VAL17)\
GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_BEGIN(UEBP_ENUM_TYPE, RAW_ENUM_TYPE, FUNCNAME_ToRawValue)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_17_ENTRIES_SWICH_UE2RAW_BEGIN(UEBP_ENUM_TYPE, RAW_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13,ENUM_VAL14,ENUM_VAL15,ENUM_VAL16,ENUM_VAL17)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_DEFAULT_ENTRY_SWICH_UE2RAW_END(UEBP_ENUM_TYPE, RAW_ENUM_TYPE, DEFAULT_ENUM_VAL)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_END()\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_BEGIN(RAW_ENUM_TYPE,UEBP_ENUM_TYPE, FUNCNAME_ToUEEnum)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_17_ENTRIES_SWICH_RAW2UE_BEGIN(RAW_ENUM_TYPE, UEBP_ENUM_TYPE, DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13,ENUM_VAL14,ENUM_VAL15,ENUM_VAL16,ENUM_VAL17)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_DEFAULT_ENTRY_SWICH_RAW2UE_END(RAW_ENUM_TYPE, UEBP_ENUM_TYPE, DEFAULT_ENUM_VAL)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_END()

#pragma endregion UABTEnumConversion 17 Entries


#pragma region UABTEnumConversion 18 Entries

// 1. from [UEBP_ENUM_TYPE] to [RAW_ENUM_TYPE]
#define GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_18_ENTRIES_SWICH_UE2RAW_BEGIN(UEBP_ENUM_TYPE,RAW_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13,ENUM_VAL14,ENUM_VAL15,ENUM_VAL16,ENUM_VAL17,ENUM_VAL18)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_17_ENTRIES_SWICH_UE2RAW_BEGIN(UEBP_ENUM_TYPE, RAW_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13,ENUM_VAL14,ENUM_VAL15,ENUM_VAL16,ENUM_VAL17)\
		case UEBP_ENUM_TYPE::ENUM_VAL18: Result = RAW_ENUM_TYPE::ENUM_VAL18; break;


// 2. from [RAW_ENUM_TYPE] to [UEBP_ENUM_TYPE]
#define GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_18_ENTRIES_SWICH_RAW2UE_BEGIN(RAW_ENUM_TYPE,UEBP_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13,ENUM_VAL14,ENUM_VAL15,ENUM_VAL16,ENUM_VAL17,ENUM_VAL18)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_17_ENTRIES_SWICH_RAW2UE_BEGIN(RAW_ENUM_TYPE, UEBP_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13,ENUM_VAL14,ENUM_VAL15,ENUM_VAL16,ENUM_VAL17)\
		case RAW_ENUM_TYPE::ENUM_VAL18: Result = UEBP_ENUM_TYPE::ENUM_VAL18; break;

#define GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_18_ENTRIES(UEBP_ENUM_TYPE,RAW_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13,ENUM_VAL14,ENUM_VAL15,ENUM_VAL16,ENUM_VAL17,ENUM_VAL18)\
GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_BEGIN(UEBP_ENUM_TYPE, RAW_ENUM_TYPE, FUNCNAME_ToRawValue)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_18_ENTRIES_SWICH_UE2RAW_BEGIN(UEBP_ENUM_TYPE, RAW_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13,ENUM_VAL14,ENUM_VAL15,ENUM_VAL16,ENUM_VAL17,ENUM_VAL18)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_DEFAULT_ENTRY_SWICH_UE2RAW_END(UEBP_ENUM_TYPE, RAW_ENUM_TYPE, DEFAULT_ENUM_VAL)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_END()\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_BEGIN(RAW_ENUM_TYPE,UEBP_ENUM_TYPE, FUNCNAME_ToUEEnum)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_18_ENTRIES_SWICH_RAW2UE_BEGIN(RAW_ENUM_TYPE, UEBP_ENUM_TYPE, DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13,ENUM_VAL14,ENUM_VAL15,ENUM_VAL16,ENUM_VAL17,ENUM_VAL18)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_DEFAULT_ENTRY_SWICH_RAW2UE_END(RAW_ENUM_TYPE, UEBP_ENUM_TYPE, DEFAULT_ENUM_VAL)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_END()


#pragma endregion UABTEnumConversion 18 Entries


#pragma region UABTEnumConversion 19 Entries

// 1. from [UEBP_ENUM_TYPE] to [RAW_ENUM_TYPE]
#define GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_19_ENTRIES_SWICH_UE2RAW_BEGIN(UEBP_ENUM_TYPE,RAW_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13,ENUM_VAL14,ENUM_VAL15,ENUM_VAL16,ENUM_VAL17,ENUM_VAL18,ENUM_VAL19)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_18_ENTRIES_SWICH_UE2RAW_BEGIN(UEBP_ENUM_TYPE, RAW_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13,ENUM_VAL14,ENUM_VAL15,ENUM_VAL16,ENUM_VAL17,ENUM_VAL18)\
		case UEBP_ENUM_TYPE::ENUM_VAL19: Result = RAW_ENUM_TYPE::ENUM_VAL19; break;

// 2. from [RAW_ENUM_TYPE] to [UEBP_ENUM_TYPE]
#define GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_19_ENTRIES_SWICH_RAW2UE_BEGIN(RAW_ENUM_TYPE,UEBP_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13,ENUM_VAL14,ENUM_VAL15,ENUM_VAL16,ENUM_VAL17,ENUM_VAL18,ENUM_VAL19)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_18_ENTRIES_SWICH_RAW2UE_BEGIN(RAW_ENUM_TYPE, UEBP_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13,ENUM_VAL14,ENUM_VAL15,ENUM_VAL16,ENUM_VAL17,ENUM_VAL18)\
		case RAW_ENUM_TYPE::ENUM_VAL19: Result = UEBP_ENUM_TYPE::ENUM_VAL19; break;


#define GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_19_ENTRIES(UEBP_ENUM_TYPE,RAW_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13,ENUM_VAL14,ENUM_VAL15,ENUM_VAL16,ENUM_VAL17,ENUM_VAL18,ENUM_VAL19)\
GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_BEGIN(UEBP_ENUM_TYPE, RAW_ENUM_TYPE, FUNCNAME_ToRawValue)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_19_ENTRIES_SWICH_UE2RAW_BEGIN(UEBP_ENUM_TYPE, RAW_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13,ENUM_VAL14,ENUM_VAL15,ENUM_VAL16,ENUM_VAL17,ENUM_VAL18,ENUM_VAL19)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_DEFAULT_ENTRY_SWICH_UE2RAW_END(UEBP_ENUM_TYPE, RAW_ENUM_TYPE, DEFAULT_ENUM_VAL)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_END()\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_BEGIN(RAW_ENUM_TYPE,UEBP_ENUM_TYPE, FUNCNAME_ToUEEnum)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_19_ENTRIES_SWICH_RAW2UE_BEGIN(RAW_ENUM_TYPE, UEBP_ENUM_TYPE, DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13,ENUM_VAL14,ENUM_VAL15,ENUM_VAL16,ENUM_VAL17,ENUM_VAL18,ENUM_VAL19)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_DEFAULT_ENTRY_SWICH_RAW2UE_END(RAW_ENUM_TYPE, UEBP_ENUM_TYPE, DEFAULT_ENUM_VAL)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_END()


#pragma endregion UABTEnumConversion 19 Entries


#pragma region UABTEnumConversion 20 Entries

// 1. from [UEBP_ENUM_TYPE] to [RAW_ENUM_TYPE]
#define GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_20_ENTRIES_SWICH_UE2RAW_BEGIN(UEBP_ENUM_TYPE,RAW_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13,ENUM_VAL14,ENUM_VAL15,ENUM_VAL16,ENUM_VAL17,ENUM_VAL18,ENUM_VAL19,ENUM_VAL20)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_19_ENTRIES_SWICH_UE2RAW_BEGIN(UEBP_ENUM_TYPE, RAW_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13,ENUM_VAL14,ENUM_VAL15,ENUM_VAL16,ENUM_VAL17,ENUM_VAL18,ENUM_VAL19)\
		case UEBP_ENUM_TYPE::ENUM_VAL20: Result = RAW_ENUM_TYPE::ENUM_VAL20; break;


// 2. from [RAW_ENUM_TYPE] to [UEBP_ENUM_TYPE]
#define GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_20_ENTRIES_SWICH_RAW2UE_BEGIN(RAW_ENUM_TYPE,UEBP_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13,ENUM_VAL14,ENUM_VAL15,ENUM_VAL16,ENUM_VAL17,ENUM_VAL18,ENUM_VAL19,ENUM_VAL20)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_19_ENTRIES_SWICH_RAW2UE_BEGIN(RAW_ENUM_TYPE, UEBP_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13,ENUM_VAL14,ENUM_VAL15,ENUM_VAL16,ENUM_VAL17,ENUM_VAL18,ENUM_VAL19)\
		case RAW_ENUM_TYPE::ENUM_VAL20: Result = UEBP_ENUM_TYPE::ENUM_VAL20; break;


#define GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_20_ENTRIES(UEBP_ENUM_TYPE,RAW_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13,ENUM_VAL14,ENUM_VAL15,ENUM_VAL16,ENUM_VAL17,ENUM_VAL18,ENUM_VAL19,ENUM_VAL20)\
GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_BEGIN(UEBP_ENUM_TYPE, RAW_ENUM_TYPE, FUNCNAME_ToRawValue)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_20_ENTRIES_SWICH_UE2RAW_BEGIN(UEBP_ENUM_TYPE, RAW_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13,ENUM_VAL14,ENUM_VAL15,ENUM_VAL16,ENUM_VAL17,ENUM_VAL18,ENUM_VAL19,ENUM_VAL20)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_DEFAULT_ENTRY_SWICH_UE2RAW_END(UEBP_ENUM_TYPE, RAW_ENUM_TYPE, DEFAULT_ENUM_VAL)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_END()\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_BEGIN(RAW_ENUM_TYPE,UEBP_ENUM_TYPE, FUNCNAME_ToUEEnum)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_20_ENTRIES_SWICH_RAW2UE_BEGIN(RAW_ENUM_TYPE, UEBP_ENUM_TYPE, DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13,ENUM_VAL14,ENUM_VAL15,ENUM_VAL16,ENUM_VAL17,ENUM_VAL18,ENUM_VAL19,ENUM_VAL20)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_DEFAULT_ENTRY_SWICH_RAW2UE_END(RAW_ENUM_TYPE, UEBP_ENUM_TYPE, DEFAULT_ENUM_VAL)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_END()


#pragma endregion UABTEnumConversion 20 Entries


#pragma region UABTEnumConversion 21 Entries

// 1. from [UEBP_ENUM_TYPE] to [RAW_ENUM_TYPE]
#define GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_21_ENTRIES_SWICH_UE2RAW_BEGIN(UEBP_ENUM_TYPE,RAW_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13,ENUM_VAL14,ENUM_VAL15,ENUM_VAL16,ENUM_VAL17,ENUM_VAL18,ENUM_VAL19,ENUM_VAL20,ENUM_VAL21)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_20_ENTRIES_SWICH_UE2RAW_BEGIN(UEBP_ENUM_TYPE, RAW_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13,ENUM_VAL14,ENUM_VAL15,ENUM_VAL16,ENUM_VAL17,ENUM_VAL18,ENUM_VAL19,ENUM_VAL20)\
		case UEBP_ENUM_TYPE::ENUM_VAL21: Result = RAW_ENUM_TYPE::ENUM_VAL21; break;


// 2. from [RAW_ENUM_TYPE] to [UEBP_ENUM_TYPE]
#define GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_21_ENTRIES_SWICH_RAW2UE_BEGIN(RAW_ENUM_TYPE,UEBP_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13,ENUM_VAL14,ENUM_VAL15,ENUM_VAL16,ENUM_VAL17,ENUM_VAL18,ENUM_VAL19,ENUM_VAL20,ENUM_VAL21)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_20_ENTRIES_SWICH_RAW2UE_BEGIN(RAW_ENUM_TYPE, UEBP_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13,ENUM_VAL14,ENUM_VAL15,ENUM_VAL16,ENUM_VAL17,ENUM_VAL18,ENUM_VAL19,ENUM_VAL20)\
		case RAW_ENUM_TYPE::ENUM_VAL21: Result = UEBP_ENUM_TYPE::ENUM_VAL21; break;


#define GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_21_ENTRIES(UEBP_ENUM_TYPE,RAW_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13,ENUM_VAL14,ENUM_VAL15,ENUM_VAL16,ENUM_VAL17,ENUM_VAL18,ENUM_VAL19,ENUM_VAL20,ENUM_VAL21)\
GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_BEGIN(UEBP_ENUM_TYPE, RAW_ENUM_TYPE, FUNCNAME_ToRawValue)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_21_ENTRIES_SWICH_UE2RAW_BEGIN(UEBP_ENUM_TYPE, RAW_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13,ENUM_VAL14,ENUM_VAL15,ENUM_VAL16,ENUM_VAL17,ENUM_VAL18,ENUM_VAL19,ENUM_VAL20,ENUM_VAL21)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_DEFAULT_ENTRY_SWICH_UE2RAW_END(UEBP_ENUM_TYPE, RAW_ENUM_TYPE, DEFAULT_ENUM_VAL)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_END()\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_BEGIN(RAW_ENUM_TYPE,UEBP_ENUM_TYPE, FUNCNAME_ToUEEnum)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_21_ENTRIES_SWICH_RAW2UE_BEGIN(RAW_ENUM_TYPE, UEBP_ENUM_TYPE, DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13,ENUM_VAL14,ENUM_VAL15,ENUM_VAL16,ENUM_VAL17,ENUM_VAL18,ENUM_VAL19,ENUM_VAL20,ENUM_VAL21)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_DEFAULT_ENTRY_SWICH_RAW2UE_END(RAW_ENUM_TYPE, UEBP_ENUM_TYPE, DEFAULT_ENUM_VAL)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_END()

#pragma endregion UABTEnumConversion 21 Entries


#pragma region UABTEnumConversion 22 Entries

// 1. from [UEBP_ENUM_TYPE] to [RAW_ENUM_TYPE]
#define GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_22_ENTRIES_SWICH_UE2RAW_BEGIN(UEBP_ENUM_TYPE,RAW_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13,ENUM_VAL14,ENUM_VAL15,ENUM_VAL16,ENUM_VAL17,ENUM_VAL18,ENUM_VAL19,ENUM_VAL20,ENUM_VAL21,ENUM_VAL22)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_21_ENTRIES_SWICH_UE2RAW_BEGIN(UEBP_ENUM_TYPE, RAW_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13,ENUM_VAL14,ENUM_VAL15,ENUM_VAL16,ENUM_VAL17,ENUM_VAL18,ENUM_VAL19,ENUM_VAL20,ENUM_VAL21)\
		case UEBP_ENUM_TYPE::ENUM_VAL22: Result = RAW_ENUM_TYPE::ENUM_VAL22; break;


// 2. from [RAW_ENUM_TYPE] to [UEBP_ENUM_TYPE]
#define GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_22_ENTRIES_SWICH_RAW2UE_BEGIN(RAW_ENUM_TYPE,UEBP_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13,ENUM_VAL14,ENUM_VAL15,ENUM_VAL16,ENUM_VAL17,ENUM_VAL18,ENUM_VAL19,ENUM_VAL20,ENUM_VAL21,ENUM_VAL22)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_21_ENTRIES_SWICH_RAW2UE_BEGIN(RAW_ENUM_TYPE, UEBP_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13,ENUM_VAL14,ENUM_VAL15,ENUM_VAL16,ENUM_VAL17,ENUM_VAL18,ENUM_VAL19,ENUM_VAL20,ENUM_VAL21)\
		case RAW_ENUM_TYPE::ENUM_VAL22: Result = UEBP_ENUM_TYPE::ENUM_VAL22; break;


#define GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_22_ENTRIES(UEBP_ENUM_TYPE,RAW_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13,ENUM_VAL14,ENUM_VAL15,ENUM_VAL16,ENUM_VAL17,ENUM_VAL18,ENUM_VAL19,ENUM_VAL20,ENUM_VAL21,ENUM_VAL22)\
GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_BEGIN(UEBP_ENUM_TYPE, RAW_ENUM_TYPE, FUNCNAME_ToRawValue)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_22_ENTRIES_SWICH_UE2RAW_BEGIN(UEBP_ENUM_TYPE, RAW_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13,ENUM_VAL14,ENUM_VAL15,ENUM_VAL16,ENUM_VAL17,ENUM_VAL18,ENUM_VAL19,ENUM_VAL20,ENUM_VAL21,ENUM_VAL22)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_DEFAULT_ENTRY_SWICH_UE2RAW_END(UEBP_ENUM_TYPE, RAW_ENUM_TYPE, DEFAULT_ENUM_VAL)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_END()\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_BEGIN(RAW_ENUM_TYPE,UEBP_ENUM_TYPE, FUNCNAME_ToUEEnum)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_22_ENTRIES_SWICH_RAW2UE_BEGIN(RAW_ENUM_TYPE, UEBP_ENUM_TYPE, DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13,ENUM_VAL14,ENUM_VAL15,ENUM_VAL16,ENUM_VAL17,ENUM_VAL18,ENUM_VAL19,ENUM_VAL20,ENUM_VAL21,ENUM_VAL22)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_DEFAULT_ENTRY_SWICH_RAW2UE_END(RAW_ENUM_TYPE, UEBP_ENUM_TYPE, DEFAULT_ENUM_VAL)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_END()


#pragma endregion UABTEnumConversion 22 Entries


#pragma region UABTEnumConversion 23 Entries

// 1. from [UEBP_ENUM_TYPE] to [RAW_ENUM_TYPE]
#define GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_23_ENTRIES_SWICH_UE2RAW_BEGIN(UEBP_ENUM_TYPE,RAW_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13,ENUM_VAL14,ENUM_VAL15,ENUM_VAL16,ENUM_VAL17,ENUM_VAL18,ENUM_VAL19,ENUM_VAL20,ENUM_VAL21,ENUM_VAL22,ENUM_VAL23)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_22_ENTRIES_SWICH_UE2RAW_BEGIN(UEBP_ENUM_TYPE, RAW_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13,ENUM_VAL14,ENUM_VAL15,ENUM_VAL16,ENUM_VAL17,ENUM_VAL18,ENUM_VAL19,ENUM_VAL20,ENUM_VAL21,ENUM_VAL22)\
		case UEBP_ENUM_TYPE::ENUM_VAL23: Result = RAW_ENUM_TYPE::ENUM_VAL23; break;


// 2. from [RAW_ENUM_TYPE] to [UEBP_ENUM_TYPE]
#define GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_23_ENTRIES_SWICH_RAW2UE_BEGIN(RAW_ENUM_TYPE,UEBP_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13,ENUM_VAL14,ENUM_VAL15,ENUM_VAL16,ENUM_VAL17,ENUM_VAL18,ENUM_VAL19,ENUM_VAL20,ENUM_VAL21,ENUM_VAL22,ENUM_VAL23)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_22_ENTRIES_SWICH_RAW2UE_BEGIN(RAW_ENUM_TYPE, UEBP_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13,ENUM_VAL14,ENUM_VAL15,ENUM_VAL16,ENUM_VAL17,ENUM_VAL18,ENUM_VAL19,ENUM_VAL20,ENUM_VAL21,ENUM_VAL22)\
		case RAW_ENUM_TYPE::ENUM_VAL23: Result = UEBP_ENUM_TYPE::ENUM_VAL23; break;


#define GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_23_ENTRIES(UEBP_ENUM_TYPE,RAW_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13,ENUM_VAL14,ENUM_VAL15,ENUM_VAL16,ENUM_VAL17,ENUM_VAL18,ENUM_VAL19,ENUM_VAL20,ENUM_VAL21,ENUM_VAL22,ENUM_VAL23)\
GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_BEGIN(UEBP_ENUM_TYPE, RAW_ENUM_TYPE, FUNCNAME_ToRawValue)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_23_ENTRIES_SWICH_UE2RAW_BEGIN(UEBP_ENUM_TYPE, RAW_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13,ENUM_VAL14,ENUM_VAL15,ENUM_VAL16,ENUM_VAL17,ENUM_VAL18,ENUM_VAL19,ENUM_VAL20,ENUM_VAL21,ENUM_VAL22,ENUM_VAL23)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_DEFAULT_ENTRY_SWICH_UE2RAW_END(UEBP_ENUM_TYPE, RAW_ENUM_TYPE, DEFAULT_ENUM_VAL)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_END()\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_BEGIN(RAW_ENUM_TYPE,UEBP_ENUM_TYPE, FUNCNAME_ToUEEnum)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_23_ENTRIES_SWICH_RAW2UE_BEGIN(RAW_ENUM_TYPE, UEBP_ENUM_TYPE, DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13,ENUM_VAL14,ENUM_VAL15,ENUM_VAL16,ENUM_VAL17,ENUM_VAL18,ENUM_VAL19,ENUM_VAL20,ENUM_VAL21,ENUM_VAL22,ENUM_VAL23)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_DEFAULT_ENTRY_SWICH_RAW2UE_END(RAW_ENUM_TYPE, UEBP_ENUM_TYPE, DEFAULT_ENUM_VAL)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_END()


#pragma endregion UABTEnumConversion 23 Entries


#pragma region UABTEnumConversion 24 Entries

// 1. from [UEBP_ENUM_TYPE] to [RAW_ENUM_TYPE]
#define GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_24_ENTRIES_SWICH_UE2RAW_BEGIN(UEBP_ENUM_TYPE,RAW_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13,ENUM_VAL14,ENUM_VAL15,ENUM_VAL16,ENUM_VAL17,ENUM_VAL18,ENUM_VAL19,ENUM_VAL20,ENUM_VAL21,ENUM_VAL22,ENUM_VAL23,ENUM_VAL24)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_23_ENTRIES_SWICH_UE2RAW_BEGIN(UEBP_ENUM_TYPE, RAW_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13,ENUM_VAL14,ENUM_VAL15,ENUM_VAL16,ENUM_VAL17,ENUM_VAL18,ENUM_VAL19,ENUM_VAL20,ENUM_VAL21,ENUM_VAL22,ENUM_VAL23)\
		case UEBP_ENUM_TYPE::ENUM_VAL24: Result = RAW_ENUM_TYPE::ENUM_VAL24; break;

// 2. from [RAW_ENUM_TYPE] to [UEBP_ENUM_TYPE]
#define GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_24_ENTRIES_SWICH_RAW2UE_BEGIN(RAW_ENUM_TYPE,UEBP_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13,ENUM_VAL14,ENUM_VAL15,ENUM_VAL16,ENUM_VAL17,ENUM_VAL18,ENUM_VAL19,ENUM_VAL20,ENUM_VAL21,ENUM_VAL22,ENUM_VAL23,ENUM_VAL24)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_23_ENTRIES_SWICH_RAW2UE_BEGIN(RAW_ENUM_TYPE, UEBP_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13,ENUM_VAL14,ENUM_VAL15,ENUM_VAL16,ENUM_VAL17,ENUM_VAL18,ENUM_VAL19,ENUM_VAL20,ENUM_VAL21,ENUM_VAL22,ENUM_VAL23)\
		case RAW_ENUM_TYPE::ENUM_VAL24: Result = UEBP_ENUM_TYPE::ENUM_VAL24; break;



#define GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_24_ENTRIES(UEBP_ENUM_TYPE,RAW_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13,ENUM_VAL14,ENUM_VAL15,ENUM_VAL16,ENUM_VAL17,ENUM_VAL18,ENUM_VAL19,ENUM_VAL20,ENUM_VAL21,ENUM_VAL22,ENUM_VAL23,ENUM_VAL24)\
GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_BEGIN(UEBP_ENUM_TYPE, RAW_ENUM_TYPE, FUNCNAME_ToRawValue)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_24_ENTRIES_SWICH_UE2RAW_BEGIN(UEBP_ENUM_TYPE, RAW_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13,ENUM_VAL14,ENUM_VAL15,ENUM_VAL16,ENUM_VAL17,ENUM_VAL18,ENUM_VAL19,ENUM_VAL20,ENUM_VAL21,ENUM_VAL22,ENUM_VAL23,ENUM_VAL24)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_DEFAULT_ENTRY_SWICH_UE2RAW_END(UEBP_ENUM_TYPE, RAW_ENUM_TYPE, DEFAULT_ENUM_VAL)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_END()\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_BEGIN(RAW_ENUM_TYPE,UEBP_ENUM_TYPE, FUNCNAME_ToUEEnum)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_24_ENTRIES_SWICH_RAW2UE_BEGIN(RAW_ENUM_TYPE, UEBP_ENUM_TYPE, DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13,ENUM_VAL14,ENUM_VAL15,ENUM_VAL16,ENUM_VAL17,ENUM_VAL18,ENUM_VAL19,ENUM_VAL20,ENUM_VAL21,ENUM_VAL22,ENUM_VAL23,ENUM_VAL24)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_DEFAULT_ENTRY_SWICH_RAW2UE_END(RAW_ENUM_TYPE, UEBP_ENUM_TYPE, DEFAULT_ENUM_VAL)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_END()


#pragma endregion UABTEnumConversion 24 Entries


#pragma region UABTEnumConversion 25 Entries

// 1. from [UEBP_ENUM_TYPE] to [RAW_ENUM_TYPE]
#define GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_25_ENTRIES_SWICH_UE2RAW_BEGIN(UEBP_ENUM_TYPE,RAW_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13,ENUM_VAL14,ENUM_VAL15,ENUM_VAL16,ENUM_VAL17,ENUM_VAL18,ENUM_VAL19,ENUM_VAL20,ENUM_VAL21,ENUM_VAL22,ENUM_VAL23,ENUM_VAL24,ENUM_VAL25)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_24_ENTRIES_SWICH_UE2RAW_BEGIN(UEBP_ENUM_TYPE, RAW_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13,ENUM_VAL14,ENUM_VAL15,ENUM_VAL16,ENUM_VAL17,ENUM_VAL18,ENUM_VAL19,ENUM_VAL20,ENUM_VAL21,ENUM_VAL22,ENUM_VAL23,ENUM_VAL24)\
		case UEBP_ENUM_TYPE::ENUM_VAL25: Result = RAW_ENUM_TYPE::ENUM_VAL25; break;


// 2. from [RAW_ENUM_TYPE] to [UEBP_ENUM_TYPE]
#define GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_25_ENTRIES_SWICH_RAW2UE_BEGIN(RAW_ENUM_TYPE,UEBP_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13,ENUM_VAL14,ENUM_VAL15,ENUM_VAL16,ENUM_VAL17,ENUM_VAL18,ENUM_VAL19,ENUM_VAL20,ENUM_VAL21,ENUM_VAL22,ENUM_VAL23,ENUM_VAL24,ENUM_VAL25)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_24_ENTRIES_SWICH_RAW2UE_BEGIN(RAW_ENUM_TYPE, UEBP_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13,ENUM_VAL14,ENUM_VAL15,ENUM_VAL16,ENUM_VAL17,ENUM_VAL18,ENUM_VAL19,ENUM_VAL20,ENUM_VAL21,ENUM_VAL22,ENUM_VAL23,ENUM_VAL24)\
		case RAW_ENUM_TYPE::ENUM_VAL25: Result = UEBP_ENUM_TYPE::ENUM_VAL25; break;


#define GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_25_ENTRIES(UEBP_ENUM_TYPE,RAW_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13,ENUM_VAL14,ENUM_VAL15,ENUM_VAL16,ENUM_VAL17,ENUM_VAL18,ENUM_VAL19,ENUM_VAL20,ENUM_VAL21,ENUM_VAL22,ENUM_VAL23,ENUM_VAL24,ENUM_VAL25)\
GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_BEGIN(UEBP_ENUM_TYPE, RAW_ENUM_TYPE, FUNCNAME_ToRawValue)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_25_ENTRIES_SWICH_UE2RAW_BEGIN(UEBP_ENUM_TYPE, RAW_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13,ENUM_VAL14,ENUM_VAL15,ENUM_VAL16,ENUM_VAL17,ENUM_VAL18,ENUM_VAL19,ENUM_VAL20,ENUM_VAL21,ENUM_VAL22,ENUM_VAL23,ENUM_VAL24,ENUM_VAL25)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_DEFAULT_ENTRY_SWICH_UE2RAW_END(UEBP_ENUM_TYPE, RAW_ENUM_TYPE, DEFAULT_ENUM_VAL)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_END()\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_BEGIN(RAW_ENUM_TYPE,UEBP_ENUM_TYPE, FUNCNAME_ToUEEnum)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_25_ENTRIES_SWICH_RAW2UE_BEGIN(RAW_ENUM_TYPE, UEBP_ENUM_TYPE, DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13,ENUM_VAL14,ENUM_VAL15,ENUM_VAL16,ENUM_VAL17,ENUM_VAL18,ENUM_VAL19,ENUM_VAL20,ENUM_VAL21,ENUM_VAL22,ENUM_VAL23,ENUM_VAL24,ENUM_VAL25)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_DEFAULT_ENTRY_SWICH_RAW2UE_END(RAW_ENUM_TYPE, UEBP_ENUM_TYPE, DEFAULT_ENUM_VAL)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_END()


#pragma endregion UABTEnumConversion 25 Entries


#pragma region UABTEnumConversion 26 Entries

// 1. from [UEBP_ENUM_TYPE] to [RAW_ENUM_TYPE]
#define GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_26_ENTRIES_SWICH_UE2RAW_BEGIN(UEBP_ENUM_TYPE,RAW_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13,ENUM_VAL14,ENUM_VAL15,ENUM_VAL16,ENUM_VAL17,ENUM_VAL18,ENUM_VAL19,ENUM_VAL20,ENUM_VAL21,ENUM_VAL22,ENUM_VAL23,ENUM_VAL24,ENUM_VAL25,ENUM_VAL26)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_25_ENTRIES_SWICH_UE2RAW_BEGIN(UEBP_ENUM_TYPE, RAW_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13,ENUM_VAL14,ENUM_VAL15,ENUM_VAL16,ENUM_VAL17,ENUM_VAL18,ENUM_VAL19,ENUM_VAL20,ENUM_VAL21,ENUM_VAL22,ENUM_VAL23,ENUM_VAL24,ENUM_VAL25)\
		case UEBP_ENUM_TYPE::ENUM_VAL26: Result = RAW_ENUM_TYPE::ENUM_VAL26; break;


// 2. from [RAW_ENUM_TYPE] to [UEBP_ENUM_TYPE]
#define GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_26_ENTRIES_SWICH_RAW2UE_BEGIN(RAW_ENUM_TYPE,UEBP_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13,ENUM_VAL14,ENUM_VAL15,ENUM_VAL16,ENUM_VAL17,ENUM_VAL18,ENUM_VAL19,ENUM_VAL20,ENUM_VAL21,ENUM_VAL22,ENUM_VAL23,ENUM_VAL24,ENUM_VAL25,ENUM_VAL26)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_25_ENTRIES_SWICH_RAW2UE_BEGIN(RAW_ENUM_TYPE, UEBP_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13,ENUM_VAL14,ENUM_VAL15,ENUM_VAL16,ENUM_VAL17,ENUM_VAL18,ENUM_VAL19,ENUM_VAL20,ENUM_VAL21,ENUM_VAL22,ENUM_VAL23,ENUM_VAL24,ENUM_VAL25)\
		case RAW_ENUM_TYPE::ENUM_VAL26: Result = UEBP_ENUM_TYPE::ENUM_VAL26; break;


#define GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_26_ENTRIES(UEBP_ENUM_TYPE,RAW_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13,ENUM_VAL14,ENUM_VAL15,ENUM_VAL16,ENUM_VAL17,ENUM_VAL18,ENUM_VAL19,ENUM_VAL20,ENUM_VAL21,ENUM_VAL22,ENUM_VAL23,ENUM_VAL24,ENUM_VAL25,ENUM_VAL26)\
GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_BEGIN(UEBP_ENUM_TYPE, RAW_ENUM_TYPE, FUNCNAME_ToRawValue)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_26_ENTRIES_SWICH_UE2RAW_BEGIN(UEBP_ENUM_TYPE, RAW_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13,ENUM_VAL14,ENUM_VAL15,ENUM_VAL16,ENUM_VAL17,ENUM_VAL18,ENUM_VAL19,ENUM_VAL20,ENUM_VAL21,ENUM_VAL22,ENUM_VAL23,ENUM_VAL24,ENUM_VAL25,ENUM_VAL26)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_DEFAULT_ENTRY_SWICH_UE2RAW_END(UEBP_ENUM_TYPE, RAW_ENUM_TYPE, DEFAULT_ENUM_VAL)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_END()\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_BEGIN(RAW_ENUM_TYPE,UEBP_ENUM_TYPE, FUNCNAME_ToUEEnum)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_26_ENTRIES_SWICH_RAW2UE_BEGIN(RAW_ENUM_TYPE, UEBP_ENUM_TYPE, DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13,ENUM_VAL14,ENUM_VAL15,ENUM_VAL16,ENUM_VAL17,ENUM_VAL18,ENUM_VAL19,ENUM_VAL20,ENUM_VAL21,ENUM_VAL22,ENUM_VAL23,ENUM_VAL24,ENUM_VAL25,ENUM_VAL26)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_DEFAULT_ENTRY_SWICH_RAW2UE_END(RAW_ENUM_TYPE, UEBP_ENUM_TYPE, DEFAULT_ENUM_VAL)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_END()

#pragma endregion UABTEnumConversion 26 Entries


#pragma region UABTEnumConversion 27 Entries

// 1. from [UEBP_ENUM_TYPE] to [RAW_ENUM_TYPE]
#define GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_27_ENTRIES_SWICH_UE2RAW_BEGIN(UEBP_ENUM_TYPE,RAW_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13,ENUM_VAL14,ENUM_VAL15,ENUM_VAL16,ENUM_VAL17,ENUM_VAL18,ENUM_VAL19,ENUM_VAL20,ENUM_VAL21,ENUM_VAL22,ENUM_VAL23,ENUM_VAL24,ENUM_VAL25,ENUM_VAL26,ENUM_VAL27)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_26_ENTRIES_SWICH_UE2RAW_BEGIN(UEBP_ENUM_TYPE, RAW_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13,ENUM_VAL14,ENUM_VAL15,ENUM_VAL16,ENUM_VAL17,ENUM_VAL18,ENUM_VAL19,ENUM_VAL20,ENUM_VAL21,ENUM_VAL22,ENUM_VAL23,ENUM_VAL24,ENUM_VAL25,ENUM_VAL26)\
		case UEBP_ENUM_TYPE::ENUM_VAL27: Result = RAW_ENUM_TYPE::ENUM_VAL27; break;


// 2. from [RAW_ENUM_TYPE] to [UEBP_ENUM_TYPE]
#define GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_27_ENTRIES_SWICH_RAW2UE_BEGIN(RAW_ENUM_TYPE,UEBP_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13,ENUM_VAL14,ENUM_VAL15,ENUM_VAL16,ENUM_VAL17,ENUM_VAL18,ENUM_VAL19,ENUM_VAL20,ENUM_VAL21,ENUM_VAL22,ENUM_VAL23,ENUM_VAL24,ENUM_VAL25,ENUM_VAL26,ENUM_VAL27)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_26_ENTRIES_SWICH_RAW2UE_BEGIN(RAW_ENUM_TYPE, UEBP_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13,ENUM_VAL14,ENUM_VAL15,ENUM_VAL16,ENUM_VAL17,ENUM_VAL18,ENUM_VAL19,ENUM_VAL20,ENUM_VAL21,ENUM_VAL22,ENUM_VAL23,ENUM_VAL24,ENUM_VAL25,ENUM_VAL26)\
		case RAW_ENUM_TYPE::ENUM_VAL27: Result = UEBP_ENUM_TYPE::ENUM_VAL27; break;


#define GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_27_ENTRIES(UEBP_ENUM_TYPE,RAW_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13,ENUM_VAL14,ENUM_VAL15,ENUM_VAL16,ENUM_VAL17,ENUM_VAL18,ENUM_VAL19,ENUM_VAL20,ENUM_VAL21,ENUM_VAL22,ENUM_VAL23,ENUM_VAL24,ENUM_VAL25,ENUM_VAL26,ENUM_VAL27)\
GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_BEGIN(UEBP_ENUM_TYPE, RAW_ENUM_TYPE, FUNCNAME_ToRawValue)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_27_ENTRIES_SWICH_UE2RAW_BEGIN(UEBP_ENUM_TYPE, RAW_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13,ENUM_VAL14,ENUM_VAL15,ENUM_VAL16,ENUM_VAL17,ENUM_VAL18,ENUM_VAL19,ENUM_VAL20,ENUM_VAL21,ENUM_VAL22,ENUM_VAL23,ENUM_VAL24,ENUM_VAL25,ENUM_VAL26,ENUM_VAL27)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_DEFAULT_ENTRY_SWICH_UE2RAW_END(UEBP_ENUM_TYPE, RAW_ENUM_TYPE, DEFAULT_ENUM_VAL)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_END()\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_BEGIN(RAW_ENUM_TYPE,UEBP_ENUM_TYPE, FUNCNAME_ToUEEnum)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_27_ENTRIES_SWICH_RAW2UE_BEGIN(RAW_ENUM_TYPE, UEBP_ENUM_TYPE, DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13,ENUM_VAL14,ENUM_VAL15,ENUM_VAL16,ENUM_VAL17,ENUM_VAL18,ENUM_VAL19,ENUM_VAL20,ENUM_VAL21,ENUM_VAL22,ENUM_VAL23,ENUM_VAL24,ENUM_VAL25,ENUM_VAL26,ENUM_VAL27)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_DEFAULT_ENTRY_SWICH_RAW2UE_END(RAW_ENUM_TYPE, UEBP_ENUM_TYPE, DEFAULT_ENUM_VAL)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_END()


#pragma endregion UABTEnumConversion 27 Entries


#pragma region UABTEnumConversion 28 Entries

// 1. from [UEBP_ENUM_TYPE] to [RAW_ENUM_TYPE]
#define GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_28_ENTRIES_SWICH_UE2RAW_BEGIN(UEBP_ENUM_TYPE,RAW_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13,ENUM_VAL14,ENUM_VAL15,ENUM_VAL16,ENUM_VAL17,ENUM_VAL18,ENUM_VAL19,ENUM_VAL20,ENUM_VAL21,ENUM_VAL22,ENUM_VAL23,ENUM_VAL24,ENUM_VAL25,ENUM_VAL26,ENUM_VAL27,ENUM_VAL28)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_27_ENTRIES_SWICH_UE2RAW_BEGIN(UEBP_ENUM_TYPE, RAW_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13,ENUM_VAL14,ENUM_VAL15,ENUM_VAL16,ENUM_VAL17,ENUM_VAL18,ENUM_VAL19,ENUM_VAL20,ENUM_VAL21,ENUM_VAL22,ENUM_VAL23,ENUM_VAL24,ENUM_VAL25,ENUM_VAL26,ENUM_VAL27)\
		case UEBP_ENUM_TYPE::ENUM_VAL28: Result = RAW_ENUM_TYPE::ENUM_VAL28; break;


// 2. from [RAW_ENUM_TYPE] to [UEBP_ENUM_TYPE]
#define GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_28_ENTRIES_SWICH_RAW2UE_BEGIN(RAW_ENUM_TYPE,UEBP_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13,ENUM_VAL14,ENUM_VAL15,ENUM_VAL16,ENUM_VAL17,ENUM_VAL18,ENUM_VAL19,ENUM_VAL20,ENUM_VAL21,ENUM_VAL22,ENUM_VAL23,ENUM_VAL24,ENUM_VAL25,ENUM_VAL26,ENUM_VAL27,ENUM_VAL28)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_27_ENTRIES_SWICH_RAW2UE_BEGIN(RAW_ENUM_TYPE, UEBP_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13,ENUM_VAL14,ENUM_VAL15,ENUM_VAL16,ENUM_VAL17,ENUM_VAL18,ENUM_VAL19,ENUM_VAL20,ENUM_VAL21,ENUM_VAL22,ENUM_VAL23,ENUM_VAL24,ENUM_VAL25,ENUM_VAL26,ENUM_VAL27)\
		case RAW_ENUM_TYPE::ENUM_VAL28: Result = UEBP_ENUM_TYPE::ENUM_VAL28; break;


#define GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_28_ENTRIES(UEBP_ENUM_TYPE,RAW_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13,ENUM_VAL14,ENUM_VAL15,ENUM_VAL16,ENUM_VAL17,ENUM_VAL18,ENUM_VAL19,ENUM_VAL20,ENUM_VAL21,ENUM_VAL22,ENUM_VAL23,ENUM_VAL24,ENUM_VAL25,ENUM_VAL26,ENUM_VAL27,ENUM_VAL28)\
GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_BEGIN(UEBP_ENUM_TYPE, RAW_ENUM_TYPE, FUNCNAME_ToRawValue)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_28_ENTRIES_SWICH_UE2RAW_BEGIN(UEBP_ENUM_TYPE, RAW_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13,ENUM_VAL14,ENUM_VAL15,ENUM_VAL16,ENUM_VAL17,ENUM_VAL18,ENUM_VAL19,ENUM_VAL20,ENUM_VAL21,ENUM_VAL22,ENUM_VAL23,ENUM_VAL24,ENUM_VAL25,ENUM_VAL26,ENUM_VAL27,ENUM_VAL28)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_DEFAULT_ENTRY_SWICH_UE2RAW_END(UEBP_ENUM_TYPE, RAW_ENUM_TYPE, DEFAULT_ENUM_VAL)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_END()\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_BEGIN(RAW_ENUM_TYPE,UEBP_ENUM_TYPE, FUNCNAME_ToUEEnum)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_28_ENTRIES_SWICH_RAW2UE_BEGIN(RAW_ENUM_TYPE, UEBP_ENUM_TYPE, DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13,ENUM_VAL14,ENUM_VAL15,ENUM_VAL16,ENUM_VAL17,ENUM_VAL18,ENUM_VAL19,ENUM_VAL20,ENUM_VAL21,ENUM_VAL22,ENUM_VAL23,ENUM_VAL24,ENUM_VAL25,ENUM_VAL26,ENUM_VAL27,ENUM_VAL28)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_DEFAULT_ENTRY_SWICH_RAW2UE_END(RAW_ENUM_TYPE, UEBP_ENUM_TYPE, DEFAULT_ENUM_VAL)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_END()


#pragma endregion UABTEnumConversion 28 Entries


#pragma region UABTEnumConversion 29 Entries

// 1. from [UEBP_ENUM_TYPE] to [RAW_ENUM_TYPE]
#define GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_29_ENTRIES_SWICH_UE2RAW_BEGIN(UEBP_ENUM_TYPE,RAW_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13,ENUM_VAL14,ENUM_VAL15,ENUM_VAL16,ENUM_VAL17,ENUM_VAL18,ENUM_VAL19,ENUM_VAL20,ENUM_VAL21,ENUM_VAL22,ENUM_VAL23,ENUM_VAL24,ENUM_VAL25,ENUM_VAL26,ENUM_VAL27,ENUM_VAL28,ENUM_VAL29)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_28_ENTRIES_SWICH_UE2RAW_BEGIN(UEBP_ENUM_TYPE, RAW_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13,ENUM_VAL14,ENUM_VAL15,ENUM_VAL16,ENUM_VAL17,ENUM_VAL18,ENUM_VAL19,ENUM_VAL20,ENUM_VAL21,ENUM_VAL22,ENUM_VAL23,ENUM_VAL24,ENUM_VAL25,ENUM_VAL26,ENUM_VAL27,ENUM_VAL28)\
		case UEBP_ENUM_TYPE::ENUM_VAL29: Result = RAW_ENUM_TYPE::ENUM_VAL29; break;

// 2. from [RAW_ENUM_TYPE] to [UEBP_ENUM_TYPE]
#define GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_29_ENTRIES_SWICH_RAW2UE_BEGIN(RAW_ENUM_TYPE,UEBP_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13,ENUM_VAL14,ENUM_VAL15,ENUM_VAL16,ENUM_VAL17,ENUM_VAL18,ENUM_VAL19,ENUM_VAL20,ENUM_VAL21,ENUM_VAL22,ENUM_VAL23,ENUM_VAL24,ENUM_VAL25,ENUM_VAL26,ENUM_VAL27,ENUM_VAL28,ENUM_VAL29)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_28_ENTRIES_SWICH_RAW2UE_BEGIN(RAW_ENUM_TYPE, UEBP_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13,ENUM_VAL14,ENUM_VAL15,ENUM_VAL16,ENUM_VAL17,ENUM_VAL18,ENUM_VAL19,ENUM_VAL20,ENUM_VAL21,ENUM_VAL22,ENUM_VAL23,ENUM_VAL24,ENUM_VAL25,ENUM_VAL26,ENUM_VAL27,ENUM_VAL28)\
		case RAW_ENUM_TYPE::ENUM_VAL29: Result = UEBP_ENUM_TYPE::ENUM_VAL29; break;


#define GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_29_ENTRIES(UEBP_ENUM_TYPE,RAW_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13,ENUM_VAL14,ENUM_VAL15,ENUM_VAL16,ENUM_VAL17,ENUM_VAL18,ENUM_VAL19,ENUM_VAL20,ENUM_VAL21,ENUM_VAL22,ENUM_VAL23,ENUM_VAL24,ENUM_VAL25,ENUM_VAL26,ENUM_VAL27,ENUM_VAL28,ENUM_VAL29)\
GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_BEGIN(UEBP_ENUM_TYPE, RAW_ENUM_TYPE, FUNCNAME_ToRawValue)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_29_ENTRIES_SWICH_UE2RAW_BEGIN(UEBP_ENUM_TYPE, RAW_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13,ENUM_VAL14,ENUM_VAL15,ENUM_VAL16,ENUM_VAL17,ENUM_VAL18,ENUM_VAL19,ENUM_VAL20,ENUM_VAL21,ENUM_VAL22,ENUM_VAL23,ENUM_VAL24,ENUM_VAL25,ENUM_VAL26,ENUM_VAL27,ENUM_VAL28,ENUM_VAL29)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_DEFAULT_ENTRY_SWICH_UE2RAW_END(UEBP_ENUM_TYPE, RAW_ENUM_TYPE, DEFAULT_ENUM_VAL)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_END()\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_BEGIN(RAW_ENUM_TYPE,UEBP_ENUM_TYPE, FUNCNAME_ToUEEnum)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_29_ENTRIES_SWICH_RAW2UE_BEGIN(RAW_ENUM_TYPE, UEBP_ENUM_TYPE, DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13,ENUM_VAL14,ENUM_VAL15,ENUM_VAL16,ENUM_VAL17,ENUM_VAL18,ENUM_VAL19,ENUM_VAL20,ENUM_VAL21,ENUM_VAL22,ENUM_VAL23,ENUM_VAL24,ENUM_VAL25,ENUM_VAL26,ENUM_VAL27,ENUM_VAL28,ENUM_VAL29)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_DEFAULT_ENTRY_SWICH_RAW2UE_END(RAW_ENUM_TYPE, UEBP_ENUM_TYPE, DEFAULT_ENUM_VAL)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_END()


#pragma endregion UABTEnumConversion 29 Entries


#pragma region UABTEnumConversion 30 Entries

// 1. from [UEBP_ENUM_TYPE] to [RAW_ENUM_TYPE]
#define GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_30_ENTRIES_SWICH_UE2RAW_BEGIN(UEBP_ENUM_TYPE,RAW_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13,ENUM_VAL14,ENUM_VAL15,ENUM_VAL16,ENUM_VAL17,ENUM_VAL18,ENUM_VAL19,ENUM_VAL20,ENUM_VAL21,ENUM_VAL22,ENUM_VAL23,ENUM_VAL24,ENUM_VAL25,ENUM_VAL26,ENUM_VAL27,ENUM_VAL28,ENUM_VAL29,ENUM_VAL30)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_29_ENTRIES_SWICH_UE2RAW_BEGIN(UEBP_ENUM_TYPE, RAW_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13,ENUM_VAL14,ENUM_VAL15,ENUM_VAL16,ENUM_VAL17,ENUM_VAL18,ENUM_VAL19,ENUM_VAL20,ENUM_VAL21,ENUM_VAL22,ENUM_VAL23,ENUM_VAL24,ENUM_VAL25,ENUM_VAL26,ENUM_VAL27,ENUM_VAL28,ENUM_VAL29)\
		case UEBP_ENUM_TYPE::ENUM_VAL30: Result = RAW_ENUM_TYPE::ENUM_VAL30; break;

// 2. from [RAW_ENUM_TYPE] to [UEBP_ENUM_TYPE]
#define GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_30_ENTRIES_SWICH_RAW2UE_BEGIN(RAW_ENUM_TYPE,UEBP_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13,ENUM_VAL14,ENUM_VAL15,ENUM_VAL16,ENUM_VAL17,ENUM_VAL18,ENUM_VAL19,ENUM_VAL20,ENUM_VAL21,ENUM_VAL22,ENUM_VAL23,ENUM_VAL24,ENUM_VAL25,ENUM_VAL26,ENUM_VAL27,ENUM_VAL28,ENUM_VAL29,ENUM_VAL30)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_29_ENTRIES_SWICH_RAW2UE_BEGIN(RAW_ENUM_TYPE, UEBP_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13,ENUM_VAL14,ENUM_VAL15,ENUM_VAL16,ENUM_VAL17,ENUM_VAL18,ENUM_VAL19,ENUM_VAL20,ENUM_VAL21,ENUM_VAL22,ENUM_VAL23,ENUM_VAL24,ENUM_VAL25,ENUM_VAL26,ENUM_VAL27,ENUM_VAL28,ENUM_VAL29)\
		case RAW_ENUM_TYPE::ENUM_VAL30: Result = UEBP_ENUM_TYPE::ENUM_VAL30; break;


#define GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_30_ENTRIES(UEBP_ENUM_TYPE,RAW_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13,ENUM_VAL14,ENUM_VAL15,ENUM_VAL16,ENUM_VAL17,ENUM_VAL18,ENUM_VAL19,ENUM_VAL20,ENUM_VAL21,ENUM_VAL22,ENUM_VAL23,ENUM_VAL24,ENUM_VAL25,ENUM_VAL26,ENUM_VAL27,ENUM_VAL28,ENUM_VAL29,ENUM_VAL30)\
GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_BEGIN(UEBP_ENUM_TYPE, RAW_ENUM_TYPE, FUNCNAME_ToRawValue)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_30_ENTRIES_SWICH_UE2RAW_BEGIN(UEBP_ENUM_TYPE, RAW_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13,ENUM_VAL14,ENUM_VAL15,ENUM_VAL16,ENUM_VAL17,ENUM_VAL18,ENUM_VAL19,ENUM_VAL20,ENUM_VAL21,ENUM_VAL22,ENUM_VAL23,ENUM_VAL24,ENUM_VAL25,ENUM_VAL26,ENUM_VAL27,ENUM_VAL28,ENUM_VAL29,ENUM_VAL30)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_DEFAULT_ENTRY_SWICH_UE2RAW_END(UEBP_ENUM_TYPE, RAW_ENUM_TYPE, DEFAULT_ENUM_VAL)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_END()\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_BEGIN(RAW_ENUM_TYPE,UEBP_ENUM_TYPE, FUNCNAME_ToUEEnum)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_30_ENTRIES_SWICH_RAW2UE_BEGIN(RAW_ENUM_TYPE, UEBP_ENUM_TYPE, DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13,ENUM_VAL14,ENUM_VAL15,ENUM_VAL16,ENUM_VAL17,ENUM_VAL18,ENUM_VAL19,ENUM_VAL20,ENUM_VAL21,ENUM_VAL22,ENUM_VAL23,ENUM_VAL24,ENUM_VAL25,ENUM_VAL26,ENUM_VAL27,ENUM_VAL28,ENUM_VAL29,ENUM_VAL30)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_DEFAULT_ENTRY_SWICH_RAW2UE_END(RAW_ENUM_TYPE, UEBP_ENUM_TYPE, DEFAULT_ENUM_VAL)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_END()


#pragma endregion UABTEnumConversion 30 Entries


#pragma region UABTEnumConversion 31 Entries

// 1. from [UEBP_ENUM_TYPE] to [RAW_ENUM_TYPE]
#define GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_31_ENTRIES_SWICH_UE2RAW_BEGIN(UEBP_ENUM_TYPE,RAW_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13,ENUM_VAL14,ENUM_VAL15,ENUM_VAL16,ENUM_VAL17,ENUM_VAL18,ENUM_VAL19,ENUM_VAL20,ENUM_VAL21,ENUM_VAL22,ENUM_VAL23,ENUM_VAL24,ENUM_VAL25,ENUM_VAL26,ENUM_VAL27,ENUM_VAL28,ENUM_VAL29,ENUM_VAL30,ENUM_VAL31)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_30_ENTRIES_SWICH_UE2RAW_BEGIN(UEBP_ENUM_TYPE, RAW_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13,ENUM_VAL14,ENUM_VAL15,ENUM_VAL16,ENUM_VAL17,ENUM_VAL18,ENUM_VAL19,ENUM_VAL20,ENUM_VAL21,ENUM_VAL22,ENUM_VAL23,ENUM_VAL24,ENUM_VAL25,ENUM_VAL26,ENUM_VAL27,ENUM_VAL28,ENUM_VAL29,ENUM_VAL30)\
		case UEBP_ENUM_TYPE::ENUM_VAL31: Result = RAW_ENUM_TYPE::ENUM_VAL31; break;


// 2. from [RAW_ENUM_TYPE] to [UEBP_ENUM_TYPE]
#define GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_31_ENTRIES_SWICH_RAW2UE_BEGIN(RAW_ENUM_TYPE,UEBP_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13,ENUM_VAL14,ENUM_VAL15,ENUM_VAL16,ENUM_VAL17,ENUM_VAL18,ENUM_VAL19,ENUM_VAL20,ENUM_VAL21,ENUM_VAL22,ENUM_VAL23,ENUM_VAL24,ENUM_VAL25,ENUM_VAL26,ENUM_VAL27,ENUM_VAL28,ENUM_VAL29,ENUM_VAL30,ENUM_VAL31)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_30_ENTRIES_SWICH_RAW2UE_BEGIN(RAW_ENUM_TYPE, UEBP_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13,ENUM_VAL14,ENUM_VAL15,ENUM_VAL16,ENUM_VAL17,ENUM_VAL18,ENUM_VAL19,ENUM_VAL20,ENUM_VAL21,ENUM_VAL22,ENUM_VAL23,ENUM_VAL24,ENUM_VAL25,ENUM_VAL26,ENUM_VAL27,ENUM_VAL28,ENUM_VAL29,ENUM_VAL30)\
		case RAW_ENUM_TYPE::ENUM_VAL31: Result = UEBP_ENUM_TYPE::ENUM_VAL31; break;


#define GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_31_ENTRIES(UEBP_ENUM_TYPE,RAW_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13,ENUM_VAL14,ENUM_VAL15,ENUM_VAL16,ENUM_VAL17,ENUM_VAL18,ENUM_VAL19,ENUM_VAL20,ENUM_VAL21,ENUM_VAL22,ENUM_VAL23,ENUM_VAL24,ENUM_VAL25,ENUM_VAL26,ENUM_VAL27,ENUM_VAL28,ENUM_VAL29,ENUM_VAL30,ENUM_VAL31)\
GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_BEGIN(UEBP_ENUM_TYPE, RAW_ENUM_TYPE, FUNCNAME_ToRawValue)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_31_ENTRIES_SWICH_UE2RAW_BEGIN(UEBP_ENUM_TYPE, RAW_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13,ENUM_VAL14,ENUM_VAL15,ENUM_VAL16,ENUM_VAL17,ENUM_VAL18,ENUM_VAL19,ENUM_VAL20,ENUM_VAL21,ENUM_VAL22,ENUM_VAL23,ENUM_VAL24,ENUM_VAL25,ENUM_VAL26,ENUM_VAL27,ENUM_VAL28,ENUM_VAL29,ENUM_VAL30,ENUM_VAL31)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_DEFAULT_ENTRY_SWICH_UE2RAW_END(UEBP_ENUM_TYPE, RAW_ENUM_TYPE, DEFAULT_ENUM_VAL)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_END()\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_BEGIN(RAW_ENUM_TYPE,UEBP_ENUM_TYPE, FUNCNAME_ToUEEnum)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_31_ENTRIES_SWICH_RAW2UE_BEGIN(RAW_ENUM_TYPE, UEBP_ENUM_TYPE, DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13,ENUM_VAL14,ENUM_VAL15,ENUM_VAL16,ENUM_VAL17,ENUM_VAL18,ENUM_VAL19,ENUM_VAL20,ENUM_VAL21,ENUM_VAL22,ENUM_VAL23,ENUM_VAL24,ENUM_VAL25,ENUM_VAL26,ENUM_VAL27,ENUM_VAL28,ENUM_VAL29,ENUM_VAL30,ENUM_VAL31)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_DEFAULT_ENTRY_SWICH_RAW2UE_END(RAW_ENUM_TYPE, UEBP_ENUM_TYPE, DEFAULT_ENUM_VAL)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_END()

#pragma endregion UABTEnumConversion 31 Entries

// for the same item


#define EXTRA_CONTENT_RETURN_1_IDENTICAL_ENTRY(SRC_ENUM_TYPE,TAR_ENUM_TYPE,ENUM_VAL01)\
	if(VAR_NAME_UABT_STATE == SRC_ENUM_TYPE::ENUM_VAL01){\
		return TAR_ENUM_TYPE::ENUM_VAL01;\
	}


#define EXTRA_CONTENT_RETURN_2_IDENTICAL_ENTRIES(SRC_ENUM_TYPE,TAR_ENUM_TYPE,ENUM_VAL01,ENUM_VAL02)\
	EXTRA_CONTENT_RETURN_1_IDENTICAL_ENTRY(SRC_ENUM_TYPE,TAR_ENUM_TYPE,ENUM_VAL01) \
	if(VAR_NAME_UABT_STATE == SRC_ENUM_TYPE::ENUM_VAL02){ \
		return TAR_ENUM_TYPE::ENUM_VAL02; \
	}

// For Test
//#define GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_3_ENTRIES_WITH_2_IDENTICAL_ONES(IDENUM_VAL01,IDENUM_VAL02,UEBP_ENUM_TYPE,RAW_ENUM_TYPE,DEFAULT_ENUM_VAL)\
//GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_BEGIN(UEBP_ENUM_TYPE, RAW_ENUM_TYPE, FUNCNAME_ToRawValue)\
//	EXTRA_CONTENT_RETURN_2_IDENTICAL_ENTRIES(UEBP_ENUM_TYPE,RAW_ENUM_TYPE,IDENUM_VAL01,IDENUM_VAL02)\
//	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_DEFAULT_ENTRY_SWICH_UE2RAW_BEGIN(UEBP_ENUM_TYPE, RAW_ENUM_TYPE,DEFAULT_ENUM_VAL)\
//	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_DEFAULT_ENTRY_SWICH_UE2RAW_END(UEBP_ENUM_TYPE, RAW_ENUM_TYPE, DEFAULT_ENUM_VAL)\
//	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_END()\
//	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_BEGIN(RAW_ENUM_TYPE,UEBP_ENUM_TYPE, FUNCNAME_ToUEEnum)\
//		EXTRA_CONTENT_RETURN_2_IDENTICAL_ENTRIES(RAW_ENUM_TYPE,UEBP_ENUM_TYPE,IDENUM_VAL01,IDENUM_VAL02)\
//	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_DEFAULT_ENTRY_SWICH_RAW2UE_BEGIN(RAW_ENUM_TYPE, UEBP_ENUM_TYPE, DEFAULT_ENUM_VAL)\
//	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_DEFAULT_ENTRY_SWICH_RAW2UE_END(RAW_ENUM_TYPE, UEBP_ENUM_TYPE, DEFAULT_ENUM_VAL)\
//	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_END()


#define GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_19_ENTRIES_WITH_2_IDENTICAL_ONES(IDENUM_VAL01,IDENUM_VAL02,UEBP_ENUM_TYPE,RAW_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13,ENUM_VAL14,ENUM_VAL15,ENUM_VAL16,ENUM_VAL17)\
GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_BEGIN(UEBP_ENUM_TYPE, RAW_ENUM_TYPE, FUNCNAME_ToRawValue)\
	EXTRA_CONTENT_RETURN_2_IDENTICAL_ENTRIES(UEBP_ENUM_TYPE,RAW_ENUM_TYPE,IDENUM_VAL01,IDENUM_VAL02)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_17_ENTRIES_SWICH_UE2RAW_BEGIN(UEBP_ENUM_TYPE, RAW_ENUM_TYPE,DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13,ENUM_VAL14,ENUM_VAL15,ENUM_VAL16,ENUM_VAL17)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_DEFAULT_ENTRY_SWICH_UE2RAW_END(UEBP_ENUM_TYPE, RAW_ENUM_TYPE, DEFAULT_ENUM_VAL)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_END()\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_BEGIN(RAW_ENUM_TYPE,UEBP_ENUM_TYPE, FUNCNAME_ToUEEnum)\
		EXTRA_CONTENT_RETURN_2_IDENTICAL_ENTRIES(RAW_ENUM_TYPE,UEBP_ENUM_TYPE,IDENUM_VAL01,IDENUM_VAL02)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_17_ENTRIES_SWICH_RAW2UE_BEGIN(RAW_ENUM_TYPE, UEBP_ENUM_TYPE, DEFAULT_ENUM_VAL,ENUM_VAL02,ENUM_VAL03,ENUM_VAL04,ENUM_VAL05,ENUM_VAL06,ENUM_VAL07,ENUM_VAL08,ENUM_VAL09,ENUM_VAL10,ENUM_VAL11,ENUM_VAL12,ENUM_VAL13,ENUM_VAL14,ENUM_VAL15,ENUM_VAL16,ENUM_VAL17)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_DEFAULT_ENTRY_SWICH_RAW2UE_END(RAW_ENUM_TYPE, UEBP_ENUM_TYPE, DEFAULT_ENUM_VAL)\
	GEN_UABTFUNC_SIGNATURE_ENUMCONVERSION_BASE_FUNC_END()