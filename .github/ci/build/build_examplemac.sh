# --------------------------------------------------------------------------------------------------------------------------
# =====================================
# ========== Guidelines ===============
# =====================================
#
# -------------------------------------
# ---- Common Environment Variable ----
# -------------------------------------
# ${Package_Publish} (boolean): Indicates whether it is build package process, e.g. If you want to get one CI SDK package.
# ${Clean_Clone} (boolean): Indicates whether it is clean build. If true, CI will clean ${output} for each build process.
# ${is_tag_fetch} (boolean): If true, git checkout will work as tag fetch mode.
# ${is_official_build} (boolean): Indicates whether it is official build release.
# ${arch} (string): Indicates build arch set in build pipeline.
# ${short_version} (string): CI auto generated short version string.
# ${release_version} (string): CI auto generated version string.
# ${build_date} (string(yyyyMMdd)): Build date generated by CI.
# ${build_timestamp} (string (yyyyMMdd_hhmm)): Build timestamp generated by CI.
# ${platform} (string): Build platform generated by CI.
# ${BUILD_NUMBER} (string): Build number generated by CI.
# ${WORKSPACE} (string): Working dir generated by CI.
#
# -------------------------------------
# ------- Job Custom Parameters -------
# -------------------------------------
# If you added one custom parameter via rehoboam website, e.g. extra_args.
# You could use $extra_args to get its value.
#
# -------------------------------------
# ------------- Input -----------------
# -------------------------------------
# ${source_root}: Source root which checkout the source code.
# ${WORKSPACE}: project owned private workspace.
#
# -------------------------------------
# ------------- Output ----------------
# -------------------------------------
# Generally, we should put the output files into ${WORKSPACE}
# 1. for pull request: Output files should be zipped to test.zip, and then copy to ${WORKSPACE}.
# 2. for pull request (options): Output static xml should be static_${platform}.xml, and then copy to ${WORKSPACE}.
# 3. for others: Output files should be zipped to anything_you_want.zip, and then copy it to {WORKSPACE}.
#
# -------------------------------------
# --------- Avaliable Tools -----------
# -------------------------------------
# Compressing & Decompressing: 7za a, 7za x
#
# -------------------------------------
# ----------- Test Related ------------
# -------------------------------------
# PR build, zip test related to test.zip
# Package build, zip package related to package.zip
#
# -------------------------------------
# ------ Publish to artifactory -------
# -------------------------------------
# [Download] artifacts from artifactory:
# python3 ${WORKSPACE}/artifactory_utils.py --action=download_file --file=ARTIFACTORY_URL
#
# [Upload] artifacts to artifactory:
# python3 ${WORKSPACE}/artifactory_utils.py --action=upload_file --file=FILEPATTERN --project
# Sample Code:
# python3 ${WORKSPACE}/artifactory_utils.py --action=upload_file --file=*.zip --project
#
# [Upload] artifacts folder to artifactory
# python3 ${WORKSPACE}/artifactory_utils.py --action=upload_file --file=FILEPATTERN --project --with_folder
# Sample Code:
# python3 ${WORKSPACE}/artifactory_utils.py --action=upload_file --file=./folder --project --with_folder
#
# ========== Guidelines End=============
# --------------------------------------------------------------------------------------------------------------------------

echo Package_Publish: $Package_Publish
echo is_tag_fetch: $is_tag_fetch
echo arch: $arch
echo source_root: %source_root%
echo output: /tmp/jenkins/${project}_out
echo build_date: $build_date
echo build_time: $build_time
echo release_version: $release_version
echo short_version: $short_version
echo pwd: `pwd`

CUR_DIR=$(pwd)
echo %CUR_DIR%
mkdir $(pwd)/AgoraFullPlugins
mkdir $(pwd)/AgoraFullPlugins
mkdir $(pwd)/Agora-Unreal-SDK-CPP-Example/Plugins
mkdir $(pwd)/Agora-Unreal-SDK-Blueprint-Example/Plugins
::--------------------------------------
:: Download Package
::--------------------------------------
echo "[Unreal CI] Download package"
python3 ${WORKSPACE}/artifactory_utils.py --action=$(pwd)/AgoraFullPlugins/FullPlugin.zip --file=www.baidu.com
python3 ${WORKSPACE}/artifactory_utils.py --action=$(pwd)/AgoraVoicePlugins/VoicePlugin.zip --file=www.baidu.com
::--------------------------------------
:: Package full Cpp
::--------------------------------------
echo "[Unreal CI] Start package Full CppPackage"
cp $(pwd)/AgoraFullPlugins/FullPlugin.zip $(pwd)/Agora-Unreal-SDK-CPP-Example/Plugins/FullPlugin.zip
cd $(pwd)/Agora-Unreal-SDK-CPP-Example/Plugins
unzip FullPlugin.zip
del FullPlugin.zip
"E:\Epic Games\UE_4.27\Engine\Build\BatchFiles\RunUAT.bat" -ScriptsForProject=D:/UEproject/Agora-Unreal-SDK-CPP-NG/Agora-Unreal-SDK-Blueprint-Example/AgoraBPExample.uproject BuildCookRun -nocompileeditor -installed -nop4 -project=D:/UEproject/Agora-Unreal-SDK-CPP-NG/Agora-Unreal-SDK-Blueprint-Example/AgoraBPExample.uproject -cook -stage -archive -archivedirectory=%CUR_DIR%/packages/Cpp/Full/Windows -package -ue4exe="E:\Epic Games\UE_4.27\Engine\Binaries\Win64\UE4Editor-Cmd.exe" -compressed -ddc=InstalledDerivedDataBackendGraph -pak -prereqs -nodebuginfo -targetplatform=Win64 -build -target=AgoraBPExample -clientconfig=Development -utf8output
"E:\Epic Games\UE_4.27\Engine\Build\BatchFiles\RunUAT.bat" -ScriptsForProject=D:/UEproject/Agora-Unreal-SDK-CPP-NG/Agora-Unreal-SDK-Blueprint-Example/AgoraBPExample.uproject BuildCookRun -nocompileeditor -installed -nop4 -project=D:/UEproject/Agora-Unreal-SDK-CPP-NG/Agora-Unreal-SDK-Blueprint-Example/AgoraBPExample.uproject -cook -stage -archive -archivedirectory=%CUR_DIR%/packages/Cpp/Full/Android -package -ue4exe="E:\Epic Games\UE_4.27\Engine\Binaries\Win64\UE4Editor-Cmd.exe" -compressed -ddc=InstalledDerivedDataBackendGraph -pak -prereqs -nodebuginfo -targetplatform=Android -cookflavor=Multi -build -target=AgoraBPExample -clientconfig=Development -utf8output
::--------------------------------------
:: Package full blueprint
::--------------------------------------
echo "[Unreal CI] Start package Full BlueprintPackage"
cp $(pwd)/AgoraFullPlugins/FullPlugin.zip $(pwd)/Agora-Unreal-SDK-Blueprint-Example/FullPlugin.zip
cd $(pwd)/Agora-Unreal-SDK-Blueprint-Example/Plugins
unzip FullPlugin.zip
del FullPlugin.zip
"E:\Epic Games\UE_4.27\Engine\Build\BatchFiles\RunUAT.bat" -ScriptsForProject=D:/UEproject/Agora-Unreal-SDK-CPP-NG/Agora-Unreal-SDK-Blueprint-Example/AgoraBPExample.uproject BuildCookRun -nocompileeditor -installed -nop4 -project=D:/UEproject/Agora-Unreal-SDK-CPP-NG/Agora-Unreal-SDK-Blueprint-Example/AgoraBPExample.uproject -cook -stage -archive -archivedirectory=%CUR_DIR%/packages/Blueprint/Full/Windows -package -ue4exe="E:\Epic Games\UE_4.27\Engine\Binaries\Win64\UE4Editor-Cmd.exe" -compressed -ddc=InstalledDerivedDataBackendGraph -pak -prereqs -nodebuginfo -targetplatform=Win64 -build -target=AgoraBPExample -clientconfig=Development -utf8output
"E:\Epic Games\UE_4.27\Engine\Build\BatchFiles\RunUAT.bat" -ScriptsForProject=D:/UEproject/Agora-Unreal-SDK-CPP-NG/Agora-Unreal-SDK-Blueprint-Example/AgoraBPExample.uproject BuildCookRun -nocompileeditor -installed -nop4 -project=D:/UEproject/Agora-Unreal-SDK-CPP-NG/Agora-Unreal-SDK-Blueprint-Example/AgoraBPExample.uproject -cook -stage -archive -archivedirectory=%CUR_DIR%/packages/Blueprint/Full/Android -package -ue4exe="E:\Epic Games\UE_4.27\Engine\Binaries\Win64\UE4Editor-Cmd.exe" -compressed -ddc=InstalledDerivedDataBackendGraph -pak -prereqs -nodebuginfo -targetplatform=Android -cookflavor=Multi -build -target=AgoraBPExample -clientconfig=Development -utf8output
::--------------------------------------
:: Package voice cpp
::--------------------------------------
del $(pwd)/Agora-Unreal-SDK-CPP-Example/Plugins
mkdir $(pwd)/Agora-Unreal-SDK-CPP-Example/Plugins
cp $(pwd)/AgoraVoicePlugins/VoicePlugin.zip $(pwd)/Agora-Unreal-SDK-CPP-Example/Plugins/VoicePlugin.zip
cd $(pwd)/Agora-Unreal-SDK-CPP-Example/Plugins
unzip VoicePlugin.zip
del VoicePlugin.zip
"E:\Epic Games\UE_4.27\Engine\Build\BatchFiles\RunUAT.bat" -ScriptsForProject=D:/UEproject/Agora-Unreal-SDK-CPP-NG/Agora-Unreal-SDK-Blueprint-Example/AgoraBPExample.uproject BuildCookRun -nocompileeditor -installed -nop4 -project=D:/UEproject/Agora-Unreal-SDK-CPP-NG/Agora-Unreal-SDK-Blueprint-Example/AgoraBPExample.uproject -cook -stage -archive -archivedirectory=%CUR_DIR%/packages/Cpp/Voice/Android -package -ue4exe="E:\Epic Games\UE_4.27\Engine\Binaries\Win64\UE4Editor-Cmd.exe" -compressed -ddc=InstalledDerivedDataBackendGraph -pak -prereqs -nodebuginfo -targetplatform=Android -cookflavor=Multi -build -target=AgoraBPExample -clientconfig=Development -utf8output
::--------------------------------------
:: Package voice blueprint
::--------------------------------------
del $(pwd)/Agora-Unreal-SDK-Blueprint-Example/Plugins
mkdir $(pwd)/Agora-Unreal-SDK-Blueprint-Example/Plugins
cp $(pwd)/AgoraVoicePlugins/VoicePlugin.zip $(pwd)/Agora-Unreal-SDK-Blueprint-Example/Plugins/VoicePlugin.zip
cd $(pwd)/Agora-Unreal-SDK-Blueprint-Example/Plugins
unzip VoicePlugin.zip
del VoicePlugin.zip
"E:\Epic Games\UE_4.27\Engine\Build\BatchFiles\RunUAT.bat" -ScriptsForProject=D:/UEproject/Agora-Unreal-SDK-CPP-NG/Agora-Unreal-SDK-Blueprint-Example/AgoraBPExample.uproject BuildCookRun -nocompileeditor -installed -nop4 -project=D:/UEproject/Agora-Unreal-SDK-CPP-NG/Agora-Unreal-SDK-Blueprint-Example/AgoraBPExample.uproject -cook -stage -archive -archivedirectory=%CUR_DIR%/packages/Blueprint/Voice/Android -package -ue4exe="E:\Epic Games\UE_4.27\Engine\Binaries\Win64\UE4Editor-Cmd.exe" -compressed -ddc=InstalledDerivedDataBackendGraph -pak -prereqs -nodebuginfo -targetplatform=Android -cookflavor=Multi -build -target=AgoraBPExample -clientconfig=Development -utf8output

::--------------------------------------
:: Zip Package
::--------------------------------------
cd %CUR_DIR%
zip -r "package".zip %CUR_DIR%/packages

cp package.zip "$WORKSPACE" || exit 1

exit 0;