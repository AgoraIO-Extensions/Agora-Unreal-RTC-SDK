REM --------------------------------------------------------------------------------------------------------------------------
REM ========== Guidelines ===============
REM
REM -------------------------------------
REM ---- Common Environment Variable ----
REM -------------------------------------
REM ${Package_Publish} (boolean): Indicates whether it is build package process, e.g. If you want to get one CI SDK package.
REM ${Clean_Clone} (boolean): Indicates whether it is clean build. If true, CI will clean ${output} for each build process.
REM ${is_tag_fetch} (boolean): If true, git checkout will work as tag fetch mode.
REM ${is_official_build} (boolean): Indicates whether it is official build release.
REM ${arch} (string): Indicates build arch set in build pipeline.
REM ${short_version} (string): CI auto generated short version string.
REM ${release_version} (string): CI auto generated version string.
REM ${build_date} (string(yyyyMMdd)): Build date generated by CI.
REM ${build_timestamp} (string (yyyyMMdd_hhmm)): Build timestamp generated by CI.
REM ${platform} (string): Build platform generated by CI.
REM ${BUILD_NUMBER} (string): Build number generated by CI.
REM ${WORKSPACE} (string): Working dir generated by CI.
REM
REM -------------------------------------
REM ------- Job Custom Parameters -------
REM -------------------------------------
REM If you added one custom parameter via rehoboam website, e.g. extra_args.
REM You could use $extra_args to get its value.
REM
REM -------------------------------------
REM ------------- Input -----------------
REM -------------------------------------
REM ${source_root}: Source root which checkout the source code.
REM ${WORKSPACE}: project owned private workspace.
REM
REM -------------------------------------
REM ------------- Output ----------------
REM -------------------------------------
REM Generally, we should put the output files into %WORKSPACE%
REM 1. for pull request: Output files should be zipped to test.zip, and then copy to %WORKSPACE%.
REM 2. for pull request (options): Output static xml should be static_%platform%.xml, and then copy to %WORKSPACE%.
REM 3. for others: Output files should be zipped to anything_you_want.zip, and then copy it to %WORKSPACE%.
REM
REM -------------------------------------
REM --------- Avaliable Tools -----------
REM -------------------------------------
REM Compressing & Decompressing: 7z a, 7z x
REM
REM -------------------------------------
REM ----------- Test Related ------------
REM -------------------------------------
REM PR build, zip test related to test.zip
REM Package build, zip package related to package.zip
REM
REM -------------------------------------
REM ------ Publish to artifactory -------
REM -------------------------------------
REM [Download] artifacts from artifactory:
REM python3 ${WORKSPACE}/artifactory_utils.py --action=download_file --file=ARTIFACTORY_URL
REM
REM [Upload] artifacts to artifactory:
REM python3 ${WORKSPACE}/artifactory_utils.py --action=upload_file --file=FILEPATTERN --project
REM Sample Code:
REM python3 ${WORKSPACE}/artifactory_utils.py --action=upload_file --file=*.zip --project
REM
REM [Upload] artifacts folder to artifactory
REM python3 ${WORKSPACE}/artifactory_utils.py --action=upload_file --file=FILEPATTERN --project --with_folder
REM Sample Code:
REM python3 ${WORKSPACE}/artifactory_utils.py --action=upload_file --file=./folder --project --with_folder
REM
REM ========== Guidelines END==============
REM --------------------------------------------------------------------------------------------------------------------------


echo Package_Publish: %Package_Publish%
echo is_tag_fetch: %is_tag_fetch%
echo arch: %arch%
echo source_root: %source_root%
echo output: C:\\tmp\\%project%_out
echo build_date: %build_date%
echo build_time: %build_time%
echo release_version: %release_version%
echo short_version: %short_version%
echo pwd: %cd%


set CUR_DIR=%cd%
echo %CUR_DIR%
mkdir %cd%/AgoraFullPlugins
mkdir %cd%/AgoraFullPlugins
mkdir %cd%/Agora-Unreal-SDK-CPP-Example/Plugins
mkdir %cd%/Agora-Unreal-SDK-Blueprint-Example/Plugins
::--------------------------------------
:: Download Package
::--------------------------------------
echo "[Unreal CI] Download package"
python3 ${WORKSPACE}/artifactory_utils.py --action=%cd%/AgoraFullPlugins/FullPlugin.zip --file=www.baidu.com
python3 ${WORKSPACE}/artifactory_utils.py --action=%cd%/AgoraVoicePlugins/VoicePlugin.zip --file=www.baidu.com
::--------------------------------------
:: Package full Cpp
::--------------------------------------
echo "[Unreal CI] Start package Full CppPackage"
copy %cd%/AgoraFullPlugins/FullPlugin.zip %cd%/Agora-Unreal-SDK-CPP-Example/Plugins/FullPlugin.zip
cd %cd%/Agora-Unreal-SDK-CPP-Example/Plugins
unzip FullPlugin.zip
del FullPlugin.zip
"E:\Epic Games\UE_4.27\Engine\Build\BatchFiles\RunUAT.bat" -ScriptsForProject=D:/UEproject/Agora-Unreal-SDK-CPP-NG/Agora-Unreal-SDK-Blueprint-Example/AgoraBPExample.uproject BuildCookRun -nocompileeditor -installed -nop4 -project=D:/UEproject/Agora-Unreal-SDK-CPP-NG/Agora-Unreal-SDK-Blueprint-Example/AgoraBPExample.uproject -cook -stage -archive -archivedirectory=%CUR_DIR%/packages/Cpp/Full/Windows -package -ue4exe="E:\Epic Games\UE_4.27\Engine\Binaries\Win64\UE4Editor-Cmd.exe" -compressed -ddc=InstalledDerivedDataBackendGraph -pak -prereqs -nodebuginfo -targetplatform=Win64 -build -target=AgoraBPExample -clientconfig=Development -utf8output
"E:\Epic Games\UE_4.27\Engine\Build\BatchFiles\RunUAT.bat" -ScriptsForProject=D:/UEproject/Agora-Unreal-SDK-CPP-NG/Agora-Unreal-SDK-Blueprint-Example/AgoraBPExample.uproject BuildCookRun -nocompileeditor -installed -nop4 -project=D:/UEproject/Agora-Unreal-SDK-CPP-NG/Agora-Unreal-SDK-Blueprint-Example/AgoraBPExample.uproject -cook -stage -archive -archivedirectory=%CUR_DIR%/packages/Cpp/Full/Android -package -ue4exe="E:\Epic Games\UE_4.27\Engine\Binaries\Win64\UE4Editor-Cmd.exe" -compressed -ddc=InstalledDerivedDataBackendGraph -pak -prereqs -nodebuginfo -targetplatform=Android -cookflavor=Multi -build -target=AgoraBPExample -clientconfig=Development -utf8output
::--------------------------------------
:: Package full blueprint
::--------------------------------------
echo "[Unreal CI] Start package Full BlueprintPackage"
copy %cd%/AgoraFullPlugins/FullPlugin.zip %cd%/Agora-Unreal-SDK-Blueprint-Example/FullPlugin.zip
cd %cd%/Agora-Unreal-SDK-Blueprint-Example/Plugins
unzip FullPlugin.zip
del FullPlugin.zip
"E:\Epic Games\UE_4.27\Engine\Build\BatchFiles\RunUAT.bat" -ScriptsForProject=D:/UEproject/Agora-Unreal-SDK-CPP-NG/Agora-Unreal-SDK-Blueprint-Example/AgoraBPExample.uproject BuildCookRun -nocompileeditor -installed -nop4 -project=D:/UEproject/Agora-Unreal-SDK-CPP-NG/Agora-Unreal-SDK-Blueprint-Example/AgoraBPExample.uproject -cook -stage -archive -archivedirectory=%CUR_DIR%/packages/Blueprint/Full/Windows -package -ue4exe="E:\Epic Games\UE_4.27\Engine\Binaries\Win64\UE4Editor-Cmd.exe" -compressed -ddc=InstalledDerivedDataBackendGraph -pak -prereqs -nodebuginfo -targetplatform=Win64 -build -target=AgoraBPExample -clientconfig=Development -utf8output
"E:\Epic Games\UE_4.27\Engine\Build\BatchFiles\RunUAT.bat" -ScriptsForProject=D:/UEproject/Agora-Unreal-SDK-CPP-NG/Agora-Unreal-SDK-Blueprint-Example/AgoraBPExample.uproject BuildCookRun -nocompileeditor -installed -nop4 -project=D:/UEproject/Agora-Unreal-SDK-CPP-NG/Agora-Unreal-SDK-Blueprint-Example/AgoraBPExample.uproject -cook -stage -archive -archivedirectory=%CUR_DIR%/packages/Blueprint/Full/Android -package -ue4exe="E:\Epic Games\UE_4.27\Engine\Binaries\Win64\UE4Editor-Cmd.exe" -compressed -ddc=InstalledDerivedDataBackendGraph -pak -prereqs -nodebuginfo -targetplatform=Android -cookflavor=Multi -build -target=AgoraBPExample -clientconfig=Development -utf8output
::--------------------------------------
:: Package voice cpp
::--------------------------------------
del %cd%/Agora-Unreal-SDK-CPP-Example/Plugins
mkdir %cd%/Agora-Unreal-SDK-CPP-Example/Plugins
copy %cd%/AgoraVoicePlugins/VoicePlugin.zip %cd%/Agora-Unreal-SDK-CPP-Example/Plugins/VoicePlugin.zip
cd %cd%/Agora-Unreal-SDK-CPP-Example/Plugins
unzip VoicePlugin.zip
del VoicePlugin.zip
"E:\Epic Games\UE_4.27\Engine\Build\BatchFiles\RunUAT.bat" -ScriptsForProject=D:/UEproject/Agora-Unreal-SDK-CPP-NG/Agora-Unreal-SDK-Blueprint-Example/AgoraBPExample.uproject BuildCookRun -nocompileeditor -installed -nop4 -project=D:/UEproject/Agora-Unreal-SDK-CPP-NG/Agora-Unreal-SDK-Blueprint-Example/AgoraBPExample.uproject -cook -stage -archive -archivedirectory=%CUR_DIR%/packages/Cpp/Voice/Android -package -ue4exe="E:\Epic Games\UE_4.27\Engine\Binaries\Win64\UE4Editor-Cmd.exe" -compressed -ddc=InstalledDerivedDataBackendGraph -pak -prereqs -nodebuginfo -targetplatform=Android -cookflavor=Multi -build -target=AgoraBPExample -clientconfig=Development -utf8output
::--------------------------------------
:: Package voice blueprint
::--------------------------------------
del %cd%/Agora-Unreal-SDK-Blueprint-Example/Plugins
mkdir %cd%/Agora-Unreal-SDK-Blueprint-Example/Plugins
copy %cd%/AgoraVoicePlugins/VoicePlugin.zip %cd%/Agora-Unreal-SDK-Blueprint-Example/Plugins/VoicePlugin.zip
cd %cd%/Agora-Unreal-SDK-Blueprint-Example/Plugins
unzip VoicePlugin.zip
del VoicePlugin.zip
"E:\Epic Games\UE_4.27\Engine\Build\BatchFiles\RunUAT.bat" -ScriptsForProject=D:/UEproject/Agora-Unreal-SDK-CPP-NG/Agora-Unreal-SDK-Blueprint-Example/AgoraBPExample.uproject BuildCookRun -nocompileeditor -installed -nop4 -project=D:/UEproject/Agora-Unreal-SDK-CPP-NG/Agora-Unreal-SDK-Blueprint-Example/AgoraBPExample.uproject -cook -stage -archive -archivedirectory=%CUR_DIR%/packages/Blueprint/Voice/Android -package -ue4exe="E:\Epic Games\UE_4.27\Engine\Binaries\Win64\UE4Editor-Cmd.exe" -compressed -ddc=InstalledDerivedDataBackendGraph -pak -prereqs -nodebuginfo -targetplatform=Android -cookflavor=Multi -build -target=AgoraBPExample -clientconfig=Development -utf8output

::--------------------------------------
:: Zip Package
::--------------------------------------
cd %CUR_DIR%

zip -r "package".zip %CUR_DIR%/packages

cp package.zip "$WORKSPACE" || exit 1

exit 0;
